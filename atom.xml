<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>I&#39;m Tit1e</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-02T13:43:39.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Tit1e</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Javascript循环添加</title>
    <link href="http://yoursite.com/2017/02/02/22.js_for_temp/"/>
    <id>http://yoursite.com/2017/02/02/22.js_for_temp/</id>
    <published>2017-02-02T13:23:03.000Z</published>
    <updated>2017-02-02T13:43:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>工作中遇到的一种挺好的循环添加列表的方式，用模板，记录一下。<br><br>以前遇到要循环添加相同的元素用的都是字符串拼接的方式，后来工作中遇到了这种方式，发现这个比字符串拼接好用很多，简洁明了。</p>
<h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--目标div--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--模板div,模板所在div不会被复制--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"test"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello,my name is TITLE<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>I'm CONTENT years old!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//模拟后端传过来的json数据</span></div><div class="line"><span class="keyword">var</span> data = &#123;</div><div class="line">    <span class="attr">datali</span>: [&#123;</div><div class="line">        <span class="attr">name</span>: <span class="string">"chkl1"</span>,</div><div class="line">        <span class="attr">age</span>: <span class="string">"sad1"</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">name</span>: <span class="string">"chkl2"</span>,</div><div class="line">        <span class="attr">age</span>: <span class="string">"sad2"</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">name</span>: <span class="string">"chkl3"</span>,</div><div class="line">        <span class="attr">age</span>: <span class="string">"sad3"</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">name</span>: <span class="string">"chkl4"</span>,</div><div class="line">        <span class="attr">age</span>: <span class="string">"sad4"</span></div><div class="line">    &#125;, &#123;</div><div class="line">        <span class="attr">name</span>: <span class="string">"chkl5"</span>,</div><div class="line">        <span class="attr">age</span>: <span class="string">"sad5"</span></div><div class="line">    &#125;]</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> lilength = data.datali.length;</div><div class="line"><span class="keyword">var</span> arr = data.datali;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</div><div class="line">    &lt;!--获取模板div中的html--&gt;</div><div class="line">    <span class="keyword">var</span> tihuan = <span class="built_in">document</span>.getElementById(<span class="string">"test"</span>).innerHTML;</div><div class="line">    <span class="xml"><span class="comment">&lt;!--用replace替换模板中要替换的部分，替换顺序最好是先替换长的再替换短的--&gt;</span></span></div><div class="line">    tihuan = tihuan.replace(/TITLE/, arr[i].name)</div><div class="line">        .replace(/CONTENT/, arr[i].age);</div><div class="line">    <span class="comment">&lt;!--创建一个div将修改完成后的代码放进去，再将这个div添加到目标位置--&gt;</span></div><div class="line">    div = document.createElement("div");</div><div class="line">    div.innerHTML = tihuan;</div><div class="line">    document.getElementById("div").appendChild(div);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注：模板中只能用class不能使用id。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作中遇到的一种挺好的循环添加列表的方式，用模板，记录一下。&lt;br&gt;&lt;br&gt;以前遇到要循环添加相同的元素用的都是字符串拼接的方式，后来工作中遇到了这种方式，发现这个比字符串拼接好用很多，简洁明了。&lt;/p&gt;
&lt;h3 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--目标div--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;div&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--模板div,模板所在div不会被复制--&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;display: none;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;hello,my name is TITLE&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;I&#39;m CONTENT years old!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>原生Javascript实现鼠标拖拽div</title>
    <link href="http://yoursite.com/2017/02/02/21.js_mouse_drag/"/>
    <id>http://yoursite.com/2017/02/02/21.js_mouse_drag/</id>
    <published>2017-02-02T12:38:03.000Z</published>
    <updated>2017-02-02T13:42:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>鼠标拖拽是一种常见的js效果，下面贴一下原生js的实现方法。<br><br>注：第一段段js代码来自网络，第二段是在第一段基础上改进实现的。由于时间太久找不到出处，侵删。<br><br>先贴上一张对象和窗口之间距离的示意图方便理解，下文中也有注释。</p>
<p><center><img src="https://cloud.githubusercontent.com/assets/17524418/22550750/7f157632-e98c-11e6-9d76-79e0ffb08e6c.gif"></center><br><a id="more"></a></p>
<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"move"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a>CSS代码</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">    <span class="attribute">position</span>: relative;</div><div class="line">    <span class="attribute">overflow</span>: hidden;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-id">#move</span> &#123;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">    <span class="attribute">background-color</span>: <span class="number">#ddd</span>;</div><div class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</div><div class="line">    <span class="attribute">position</span>: absolute;</div><div class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Javascript代码"><a href="#Javascript代码" class="headerlink" title="Javascript代码"></a>Javascript代码</h3><h4 id="可以将元素拖拽出窗口外"><a href="#可以将元素拖拽出窗口外" class="headerlink" title="可以将元素拖拽出窗口外"></a>可以将元素拖拽出窗口外</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// clientX 设置或获取鼠标指针位置相对于当前窗口的 x 坐标，其中客户区域不包括窗口自身的控件和滚动条。 </span></div><div class="line"><span class="comment">// clientY 设置或获取鼠标指针位置相对于当前窗口的 y 坐标，其中客户区域不包括窗口自身的控件和滚动条。 </span></div><div class="line"><span class="comment">// offsetX 设置或获取鼠标指针位置相对于触发事件的对象的 x 坐标。 </span></div><div class="line"><span class="comment">// offsetY 设置或获取鼠标指针位置相对于触发事件的对象的 y 坐标。 </span></div><div class="line"><span class="comment">// screenX 设置或获取获取鼠标指针位置相对于用户屏幕的 x 坐标。 </span></div><div class="line"><span class="comment">// screenY 设置或获取鼠标指针位置相对于用户屏幕的 y 坐标。 </span></div><div class="line"><span class="comment">// x 设置或获取鼠标指针位置相对于父文档的 x 像素坐标(亦即相对于当前窗口)。 </span></div><div class="line"><span class="comment">// y 设置或获取鼠标指针位置相对于父文档的 y 像素坐标(亦即相对于当前窗口)。</span></div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"move"</span>);</div><div class="line">    move.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> e = e || event;</div><div class="line">        <span class="built_in">console</span>.log(e);</div><div class="line">        <span class="keyword">var</span> target = e.target || e.srcElement;</div><div class="line">        <span class="keyword">var</span> disX = e.clientX - target.offsetLeft;</div><div class="line">        <span class="keyword">var</span> disY = e.clientY - target.offsetTop;</div><div class="line">        <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">            target.style.left = e.clientX - disX + <span class="string">"px"</span>;</div><div class="line">            target.style.top = e.clientY - disY + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</div><div class="line">            <span class="built_in">document</span>.onmousedown = <span class="literal">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="无法将元素拖拽出窗口"><a href="#无法将元素拖拽出窗口" class="headerlink" title="无法将元素拖拽出窗口"></a>无法将元素拖拽出窗口</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"move"</span>);</div><div class="line">    move.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> e = e || event;</div><div class="line">        <span class="keyword">var</span> target = e.target || e.srcElement;</div><div class="line">        <span class="keyword">var</span> disX = e.clientX - target.offsetLeft;</div><div class="line">        <span class="keyword">var</span> disY = e.clientY - target.offsetTop;</div><div class="line">        <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">            target.style.left = e.clientX - disX + <span class="string">"px"</span>;</div><div class="line">            target.style.top = e.clientY - disY + <span class="string">"px"</span>;</div><div class="line">            <span class="keyword">if</span> (target.offsetLeft + target.offsetWidth &gt;= <span class="built_in">document</span>.body.clientWidth) &#123;</div><div class="line">                target.style.left = <span class="built_in">document</span>.body.clientWidth - target.offsetWidth + <span class="string">"px"</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (target.offsetLeft &lt; <span class="number">0</span>) &#123;</div><div class="line">                target.style.left = <span class="number">0</span> + <span class="string">"px"</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (target.offsetTop + target.offsetHeight &gt;= <span class="built_in">document</span>.body.clientHeight) &#123;</div><div class="line">                target.style.top = <span class="built_in">document</span>.body.clientHeight - target.offsetHeight + <span class="string">"px"</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (target.offsetTop &lt; <span class="number">0</span>) &#123;</div><div class="line">                target.style.top = <span class="number">0</span> + <span class="string">"px"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">            <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</div><div class="line">            <span class="built_in">document</span>.onmousedown = <span class="literal">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;鼠标拖拽是一种常见的js效果，下面贴一下原生js的实现方法。&lt;br&gt;&lt;br&gt;注：第一段段js代码来自网络，第二段是在第一段基础上改进实现的。由于时间太久找不到出处，侵删。&lt;br&gt;&lt;br&gt;先贴上一张对象和窗口之间距离的示意图方便理解，下文中也有注释。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17524418/22550750/7f157632-e98c-11e6-9d76-79e0ffb08e6c.gif&quot;&gt;&lt;/center&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>2017年计划</title>
    <link href="http://yoursite.com/2017/01/28/21.new-year-to-do-list/"/>
    <id>http://yoursite.com/2017/01/28/21.new-year-to-do-list/</id>
    <published>2017-01-28T07:52:45.000Z</published>
    <updated>2017-01-28T08:22:49.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h3><center>2017 to-do-list</center></h3><p></p>
<ol>
<li>前端：抓紧时间提升前端方面的技能水平</li>
<li>后端：2017年前半年能熟练使用thinkphp框架</li>
<li>身体：养成锻炼身体好习惯，练点肉出来，不用太多，增点重就行</li>
<li>爱好：买把尤克里里，学会弹几首曲子，还有争取把50本书的计划完成</li>
<li>其他：还清我姐借我macbook的钱，攒点积蓄，明年过年不能像今年这样狼狈</li>
</ol>
<p>希望自己能够坚持下来，不求每年变化有多大，只求每年都能进步一点点，变得美好一点点。<br><a id="more"></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;h3&gt;&lt;center&gt;2017 to-do-list&lt;/center&gt;&lt;/h3&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前端：抓紧时间提升前端方面的技能水平&lt;/li&gt;
&lt;li&gt;后端：2017年前半年能熟练使用thinkphp框架&lt;/li&gt;
&lt;li&gt;身体：养成锻炼身体好习惯，练点肉出来，不用太多，增点重就行&lt;/li&gt;
&lt;li&gt;爱好：买把尤克里里，学会弹几首曲子，还有争取把50本书的计划完成&lt;/li&gt;
&lt;li&gt;其他：还清我姐借我macbook的钱，攒点积蓄，明年过年不能像今年这样狼狈&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;希望自己能够坚持下来，不求每年变化有多大，只求每年都能进步一点点，变得美好一点点。&lt;br&gt;
    
    </summary>
    
    
      <category term="to do list" scheme="http://yoursite.com/tags/to-do-list/"/>
    
  </entry>
  
  <entry>
    <title>2016再见，2017再见。</title>
    <link href="http://yoursite.com/2016/12/31/20.goodbye2016,hello2017/"/>
    <id>http://yoursite.com/2016/12/31/20.goodbye2016,hello2017/</id>
    <published>2016-12-31T13:55:54.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>离开始写这篇文章还有两个多小时，2016年就要这么过去了。<br>今年我干了些什么：<br>2月15日-8月20日，继续在我去年实习的地方工作。<br>8月21日-10月22日，裸辞在家自学。没工作又看不到后面的路，这种感觉真的不想再体验。<br>8月24日-8月26日，找工作，26号去面试了。<br>8月27日-现在，在新单位上班，不知道算不算转行成功。但是已近无路可走只能硬着头皮走下去，写代码的日子其实挺快乐。<br>还有就是我毕业了。<br>以上。<br>最后，新年快乐！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;离开始写这篇文章还有两个多小时，2016年就要这么过去了。&lt;br&gt;今年我干了些什么：&lt;br&gt;2月15日-8月20日，继续在我去年实习的地方工作。&lt;br&gt;8月21日-10月22日，裸辞在家自学。没工作又看不到后面的路，这种感觉真的不想再体验。&lt;br&gt;8月24日-8月26日，找
    
    </summary>
    
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
      <category term="跨年" scheme="http://yoursite.com/tags/%E8%B7%A8%E5%B9%B4/"/>
    
  </entry>
  
  <entry>
    <title>详解prototype与__proto__</title>
    <link href="http://yoursite.com/2016/11/28/19.%E8%AF%A6%E8%A7%A3prototype%E4%B8%8E__proto__/"/>
    <id>http://yoursite.com/2016/11/28/19.详解prototype与__proto__/</id>
    <published>2016-11-28T11:51:59.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="prototype与proto详解"><a href="#prototype与proto详解" class="headerlink" title="prototype与proto详解"></a>prototype与<strong>proto</strong>详解</h3><p><code>prototype</code>和<code>__proto__</code>在JS中一直是一个比较头痛的东西。JS的继承是基于原型的继承。</p>
<p>在JavaScript中，我们创建一个函数a(就是声明一个函数), 那么浏览器就会在内存中创建一个对象b，而且每个函数都默认会有一个属性 <code>prototype</code> 指向了这个对象( 即：<code>prototype</code>的属性的值是这个对象 )。这个对象b就是函数a的原型对象，简称函数的原型。这个原型对象b 默认会有一个属性<code>constructor</code>指向了这个函数a ( 意思就是说：<code>constructor</code>属性的值是函数a)。</p>
<p>代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">a;<span class="comment">//function a()&#123;&#125;</span></div><div class="line"></div><div class="line"><span class="comment">//创建一个函数a，在chrome控制台中打印这个函数，显示的就是这个函数本身，</span></div><div class="line"><span class="comment">//但实际上这个函数有一个隐藏属性prototype，并且prototype是一个对象，</span></div><div class="line"><span class="comment">//prototype中还有一个constructor属性，constructor指向构造函数（这里指向a函数）。</span></div><div class="line"></div><div class="line"><span class="comment">//所以实际上a函数的结构是这个样子的：</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    prototype:&#123;</div><div class="line">        <span class="attr">constructor</span>:<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>当使用构造函数a创建对象b后，b对象会自动添加一个不可见的<code>prototype</code>属性，这个属性指向构造方法的原型对象，即<code>a.prototype</code>。但是个别浏览器（chrome、火狐支持（其它浏览器暂不清楚），IE不支持）提供了对这个属性的访问方式，即<code>__proto__</code>。<br>代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> a();</div><div class="line"></div><div class="line"><span class="comment">//此时b对象的结构：</span></div><div class="line">b = &#123;</div><div class="line">    <span class="attr">__proto__</span>:&#123;</div><div class="line">        <span class="attr">constructor</span>:<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">b.prototype <span class="comment">//undefined</span></div><div class="line">b.__proto__ <span class="comment">//Object &#123;&#125;</span></div></pre></td></tr></table></figure></p>
<p>所以用a构造函数创建的对象原型都指向<code>a.prototype</code>，因此修改<code>a.prototype</code>，通过a函数创建的对象也会受到影响。<br>代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">a.prototype.sex = <span class="string">"boy"</span>;</div><div class="line"></div><div class="line"><span class="comment">//此时的a函数结构：</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    prototype:&#123;</div><div class="line">        <span class="attr">constructor</span>:<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;,</div><div class="line">        <span class="attr">sex</span>:<span class="string">"boy"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//此时b对象的结构：</span></div><div class="line">b = &#123;</div><div class="line">    <span class="attr">__proto__</span>:&#123;</div><div class="line">        <span class="attr">constructor</span>:<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;,</div><div class="line">        <span class="attr">sex</span>:<span class="string">"boy"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//由于b函数的原型指向a.prototype，因此b.__proto__.sex也也可以访问sex属性</span></div><div class="line">b.__proto__.sex <span class="comment">//"boy"</span></div><div class="line"><span class="comment">//需要说明的是，如果我们访问一个对象的属性，如果在对象中找到了属性，</span></div><div class="line"><span class="comment">//就会直接返回，如果没有找到则会去对象指向的原型中找，如果原型中找到，</span></div><div class="line"><span class="comment">//则返回，因此，b.sex也可以访问到sex属性</span></div><div class="line">b.sex <span class="comment">//"boy"</span></div><div class="line"><span class="comment">//如果向b对象添加一个sex属性，那么新添加的sex属性会屏蔽原型中的sex属性</span></div><div class="line">b.sex = <span class="string">"girl"</span></div><div class="line"></div><div class="line"><span class="comment">//此时b对象的结构：</span></div><div class="line"><span class="keyword">var</span> b = &#123;</div><div class="line">    <span class="attr">sex</span>:<span class="string">"girl"</span>,</div><div class="line">    <span class="attr">__proto__</span>:&#123;</div><div class="line">        <span class="attr">constructor</span>:<span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;,</div><div class="line">        <span class="attr">sex</span>:<span class="string">"boy"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">b.sex <span class="comment">//"girl"</span></div><div class="line"><span class="comment">//这个时候如果要获取原型中的sex属性需要通过b.__proto__.sex</span></div><div class="line">b.__proto__.sex <span class="comment">//"boy"</span></div></pre></td></tr></table></figure></p>
<p>因为<code>prototype</code>可以修改，所以你也可以根据需要指定新的对象为a函数的原型对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">a.prototype = &#123;</div><div class="line">    <span class="attr">name</span>:<span class="string">"jack"</span>,</div><div class="line">    <span class="attr">age</span>:<span class="string">"19"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//此时的a函数结构：</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    prototype:&#123;</div><div class="line">        <span class="attr">name</span>:<span class="string">"jack"</span>,</div><div class="line">        <span class="attr">age</span>:<span class="string">"19"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//这时你会发现默认指向构造函数的constructor属性没有了。</span></div><div class="line"><span class="comment">//如果你需要constructor重新指向构造函数，则需要手动添加。</span></div><div class="line">a.prototype.constructor = a;</div><div class="line"></div><div class="line"><span class="comment">//此时的a函数结构：</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    prototype:&#123;</div><div class="line">        <span class="attr">constructor</span>:a;</div><div class="line">        name:<span class="string">"jack"</span>,</div><div class="line">        <span class="attr">age</span>:<span class="string">"19"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">a.prototype.constructor <span class="comment">//function a()&#123;&#125;</span></div></pre></td></tr></table></figure></p>
<h3 id="hasOwnProperty方法"><a href="#hasOwnProperty方法" class="headerlink" title="hasOwnProperty方法"></a>hasOwnProperty方法</h3><p>从上面我们已经知道了一个对象的属性可以来自自身也可以来自原型，那么怎么区分呢？<code>hasOwnProperty</code>方法就是用来区分某个属性是否来自自身。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">b.sex <span class="comment">//"girl" //这是我们自己添加的属性，不是从原型中继承过来的</span></div><div class="line">b.hasOwnProperty(<span class="string">"sex"</span>) <span class="comment">//true</span></div><div class="line">b.__proto__.name <span class="comment">//undefined 为什么这里会出现这种情况呢？</span></div><div class="line"><span class="comment">//原因是之前执行了：</span></div><div class="line">a.prototype = &#123;</div><div class="line">    <span class="attr">name</span>:<span class="string">"jack"</span>,</div><div class="line">    <span class="attr">age</span>:<span class="string">"19"</span></div><div class="line">&#125;</div><div class="line"><span class="comment">//这个操作将整个prototype对象替换了，因此现在的prototype已经不是之前的prototype了，</span></div><div class="line"><span class="comment">//而b还是指向之前的prototype，而之前的prototype中没有name属性，因此返回undefined。</span></div><div class="line"><span class="comment">//如果此时再创建一个c对象：</span></div><div class="line"><span class="keyword">var</span> c = <span class="keyword">new</span> a()</div><div class="line">c.__proto__.name <span class="comment">//"jack"</span></div><div class="line"><span class="comment">//此时创建的对象原型指向新的a.prototype属性，因此可以访问到name属性。</span></div><div class="line"><span class="comment">//那么怎样能让b的原型重新指向a.prototype呢？</span></div><div class="line"><span class="comment">//只要执行：</span></div><div class="line">b.__proto__ = a.prototype</div><div class="line">b.__proto__.name <span class="comment">//"jack"这样b就可以访问到新的属性了。</span></div><div class="line"><span class="comment">//回归原题</span></div><div class="line">b.hasOwnProperty(<span class="string">"name"</span>) <span class="comment">//false 因为name在原型中，所以返回false</span></div></pre></td></tr></table></figure></p>
<h3 id="in-操作符"><a href="#in-操作符" class="headerlink" title="in 操作符"></a>in 操作符</h3><p>in操作符用来判断一个属性是否存在于这个对象中。查找顺序为现在对象自身中查找，自身找不到就到原型中查找，所以只要对象的原型中存在属性，<code>in</code>操作都返回<code>true</code>。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">"sex"</span> <span class="keyword">in</span> b <span class="comment">//true</span></div><div class="line"><span class="string">"name"</span> <span class="keyword">in</span> b <span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<h3 id="组合原型模型和构造函数模型创建对象"><a href="#组合原型模型和构造函数模型创建对象" class="headerlink" title="组合原型模型和构造函数模型创建对象"></a>组合原型模型和构造函数模型创建对象</h3><p>在构造函数中添加的属性和方法，每个对象都有自己独有的一份，大家不会共享。这个特性对属性比较合适，但是对方法又不太合适。因为对所有对象来说，他们的方法应该是一份就够了，没有必要每人一份，造成内存的浪费和性能的低下。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">"李四"</span>;</div><div class="line">    <span class="keyword">this</span>.age = <span class="number">20</span>;</div><div class="line">    <span class="keyword">this</span>.eat = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        alert(<span class="string">"吃完东西"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person();</div><div class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Person();</div><div class="line"><span class="comment">//每个对象都会有不同的方法</span></div><div class="line">alert(p1.eat === p2.eat); <span class="comment">//fasle</span></div></pre></td></tr></table></figure></p>
<p>解决方法是将方法提取出来：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">"李四"</span>;</div><div class="line">    <span class="keyword">this</span>.age = <span class="number">20</span>;</div><div class="line">    <span class="keyword">this</span>.eat = eat;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    alert(<span class="string">"吃完东西"</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person();</div><div class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Person();</div><div class="line"><span class="comment">//因为eat属性都是赋值的同一个函数，所以是true</span></div><div class="line">alert(p1.eat === p2.eat); <span class="comment">//true</span></div></pre></td></tr></table></figure></p>
<p>但是上面的这种解决方法具有致命的缺陷：封装性太差。eat函数是暴露在全局中的。<br>原型模式适合封装方法，构造函数模式适合封装属性，综合两种模式的优点就有了组合模式。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//在构造方法内部封装属性</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">&#125;</div><div class="line"><span class="comment">//在原型对象内封装方法</span></div><div class="line">Person.prototype.eat = <span class="function"><span class="keyword">function</span> (<span class="params">food</span>) </span>&#123;</div><div class="line">    alert(<span class="keyword">this</span>.name + <span class="string">"爱吃"</span> + food);</div><div class="line">&#125;</div><div class="line">Person.prototype.play = <span class="function"><span class="keyword">function</span> (<span class="params">playName</span>) </span>&#123;</div><div class="line">    alert(<span class="keyword">this</span>.name + <span class="string">"爱玩"</span> + playName);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="string">"李四"</span>, <span class="number">20</span>);</div><div class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Person(<span class="string">"张三"</span>, <span class="number">30</span>);</div><div class="line">p1.eat(<span class="string">"苹果"</span>);</div><div class="line">p2.eat(<span class="string">"香蕉"</span>);</div><div class="line">p1.play(<span class="string">"志玲"</span>);</div><div class="line">p2.play(<span class="string">"凤姐"</span>);</div></pre></td></tr></table></figure>
<h3 id="动态原型模式创建对象"><a href="#动态原型模式创建对象" class="headerlink" title="动态原型模式创建对象"></a>动态原型模式创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//构造方法内部封装属性</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age</span>) </span>&#123;</div><div class="line">    <span class="comment">//每个对象都添加自己的属性</span></div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">        <span class="comment">//判断this.eat这个属性是不是function，如果不是function则证明是第一次创建对象，</span></div><div class="line">        <span class="comment">//则把这个funcion添加到原型中。</span></div><div class="line">        <span class="comment">//如果是function，则代表原型中已经有了这个方法，则不需要再添加。</span></div><div class="line">        <span class="comment">//perfect！完美解决了性能和代码的封装问题。</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="keyword">this</span>.eat !== <span class="string">"function"</span>)&#123;</div><div class="line">        Person.prototype.eat = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            alert(<span class="keyword">this</span>.name + <span class="string">" 在吃"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="string">"志玲"</span>, <span class="number">40</span>);</div><div class="line">p1.eat();</div></pre></td></tr></table></figure>
<p>内容参考：<a href="http://blog.csdn.net/u012468376/article/details/53121081" target="_blank" rel="external">http://blog.csdn.net/u012468376/article/details/53121081</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;prototype与proto详解&quot;&gt;&lt;a href=&quot;#prototype与proto详解&quot; class=&quot;headerlink&quot; title=&quot;prototype与proto详解&quot;&gt;&lt;/a&gt;prototype与&lt;strong&gt;proto&lt;/strong&gt;详解&lt;/h3&gt;&lt;p&gt;&lt;code&gt;prototype&lt;/code&gt;和&lt;code&gt;__proto__&lt;/code&gt;在JS中一直是一个比较头痛的东西。JS的继承是基于原型的继承。&lt;/p&gt;
&lt;p&gt;在JavaScript中，我们创建一个函数a(就是声明一个函数), 那么浏览器就会在内存中创建一个对象b，而且每个函数都默认会有一个属性 &lt;code&gt;prototype&lt;/code&gt; 指向了这个对象( 即：&lt;code&gt;prototype&lt;/code&gt;的属性的值是这个对象 )。这个对象b就是函数a的原型对象，简称函数的原型。这个原型对象b 默认会有一个属性&lt;code&gt;constructor&lt;/code&gt;指向了这个函数a ( 意思就是说：&lt;code&gt;constructor&lt;/code&gt;属性的值是函数a)。&lt;/p&gt;
&lt;p&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a;&lt;span class=&quot;comment&quot;&gt;//function a()&amp;#123;&amp;#125;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//创建一个函数a，在chrome控制台中打印这个函数，显示的就是这个函数本身，&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//但实际上这个函数有一个隐藏属性prototype，并且prototype是一个对象，&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//prototype中还有一个constructor属性，constructor指向构造函数（这里指向a函数）。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//所以实际上a函数的结构是这个样子的：&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    prototype:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;constructor&lt;/span&gt;:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;a&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>这不是书评</title>
    <link href="http://yoursite.com/2016/11/13/18.%E8%BF%99%E4%B8%8D%E6%98%AF%E4%B9%A6%E8%AF%84/"/>
    <id>http://yoursite.com/2016/11/13/18.这不是书评/</id>
    <published>2016-11-13T12:17:44.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　距离上次看完一本书原来已经过去这么久了，到昨天截止整整三个月。<br><br>　　这三个月发生了不少事情。在看完上本书的8天后，我辞掉了原来的工作，在原来租的房子里，过了4天暗无天日的日子后，杭州要召开峰会，我也就回了家，当然期间也告诉了父母辞职的事。<br><br>　　之后的两个月我在家呆了整整两个月，除了参加丧事被迫出去了几天。<a id="more"></a>这他妈才叫暗无天日。两个月基本上都是晚上一两点睡，早上十点起床，十点半去楼下煮个饭，下午就自学前端。然而这也不是一个励志的故事，在家的学习效率也并不高。在家呆了一个月后我开始厌恶自己，感觉自己像个好吃懒做的东西一直赖在家里，享受着父母的关系。放在十年前也许我不会有什么负担，但在这个拿年纪，我的内心已经不允许我“名正言顺”地去接受这些东西。<br><br>　　十月二十二号我终于又再次回到杭州，带着问家里要的一点钱。之前我一直想着如果积蓄花完还没找到工作怎么办？那时我已经有随便找份工作现在杭州活下去的觉悟。自己想要做的工作到最后未必会成为你想的那样，我只是不想留下遗憾，对于喜欢的事情，成为爱好也许会比成为工作好很多。<br><br>幸运的是三天后我就找到了工作，对于第一份工作我没什么要求，能让我做着混经验就已经心满意足。现在还寄宿在同学家，每天六点半起床，八点到家，三个小时花费在路途上，虽然累，但我很满足。每天都觉得过的无比充实，想想之前的两个月，真是恐怖。<br><br>　　前几天想着很久没看书了，双十一亚马逊又刚好打折，所以入了几本书。这本《追风筝的人》花了五六个小时看完了，整本书很压抑，庆幸的是它有一个还算美好的结局。很多情绪在我看这本书的时候都有流露出来，看到结局我流泪了，因为开心，这很过瘾。<br><br>我很享受一个人静静思考的过程，没有人打扰。生活中网络上充斥着太多的吐槽，严肃的讨论反而越来越少，每当你想好好地抒发一下内心严肃的感情，总会有人来吐槽矫情。曾今鸡汤文大火，反鸡汤的言论也随之出现，导致后来有些人只要看到别人发带点励志的文章就在底下评论少看鸡汤。真烦。<br></p>
<p>这不是书评，我只是想记录一点事情。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　距离上次看完一本书原来已经过去这么久了，到昨天截止整整三个月。&lt;br&gt;&lt;br&gt;　　这三个月发生了不少事情。在看完上本书的8天后，我辞掉了原来的工作，在原来租的房子里，过了4天暗无天日的日子后，杭州要召开峰会，我也就回了家，当然期间也告诉了父母辞职的事。&lt;br&gt;&lt;br&gt;　　之后的两个月我在家呆了整整两个月，除了参加丧事被迫出去了几天。
    
    </summary>
    
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
      <category term="一周小結" scheme="http://yoursite.com/tags/%E4%B8%80%E5%91%A8%E5%B0%8F%E7%B5%90/"/>
    
  </entry>
  
  <entry>
    <title>this指向与闭包原理</title>
    <link href="http://yoursite.com/2016/11/08/17.this%E6%8C%87%E5%90%91%E4%B8%8E%E9%97%AD%E5%8C%85%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2016/11/08/17.this指向与闭包原理/</id>
    <published>2016-11-08T14:42:43.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　今天理解两个难点，闭包和<code>this</code>指向，闭包其实现在还是似懂非懂，需要有空运用一下闭包可能会更加理解。<br><br>　　先说下<code>this</code>指向问题：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> name = <span class="string">"The Window"</span>;</div><div class="line">　　<span class="keyword">var</span> object = &#123;</div><div class="line">　　　　<span class="attr">name</span> : <span class="string">"My Object"</span>,</div><div class="line">　　　　<span class="attr">getNameFunc</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　　　<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　　　　　<span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">　　　　　　&#125;;</div><div class="line">　　　　&#125;</div><div class="line">　　&#125;;</div><div class="line">　　<span class="built_in">console</span>.log(object.getNameFunc()());<span class="comment">//The Window</span></div><div class="line">        <span class="built_in">console</span>.log(object.getNameFunc();</div><div class="line">  <span class="comment">//  function()&#123;</span></div><div class="line">　<span class="comment">//　　　　return function()&#123;</span></div><div class="line">　<span class="comment">//　　　　　　return this.name;</span></div><div class="line">　<span class="comment">//　　　　&#125;;</span></div></pre></td></tr></table></figure></p>
<p>　　学习闭包的时候这段代码看得我很懵，想不清楚为什么this是指向window的。那么我们先了解一下<code>this</code>指向问题。<br><br>　　<code>this</code>的指向在函数定义的时候是确定不了的，<strong>只有函数执行的时候才能确定</strong><code>this</code>到底指向谁，实际上<code>this</code>的最终指向的是<code>this</code>所在函数的<strong>上一级对象</strong>。<br><br><a id="more"></a><br>　　上面这句话非常重要，这是<code>this</code>非常重要的特点：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.x = <span class="number">1</span>;<span class="comment">//给对象写入属性x=1,如果this指向全局，则表示创建全局对象x=1</span></div><div class="line">　　　　<span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</div><div class="line">　　&#125;</div><div class="line">　　test(); <span class="comment">// 1</span></div><div class="line">    x;  <span class="comment">//1</span></div></pre></td></tr></table></figure></p>
<p>　　如果这不够直观，那么换种更加直观的写法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</div><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">this</span>.x = <span class="number">0</span>; <span class="comment">//表示将this指向的对象中的x的值修改为0</span></div><div class="line">　　&#125;</div><div class="line">　　test();</div><div class="line">　　<span class="built_in">console</span>.log(x); <span class="comment">//0，证明全局中声明的x值被修改了，说明this指向window</span></div></pre></td></tr></table></figure></p>
<p>　　上面是直接在全局调用函数，<code>this</code>指向<code>window</code>对象，函数还可以作为对象的方法调用，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> o = &#123;&#125;;</div><div class="line">　　o.x = <span class="number">1</span>; <span class="comment">//此时o = &#123;x:1&#125;</span></div><div class="line">　　o.m = test; <span class="comment">// 此时o = &#123;x:1,m:test&#125;</span></div><div class="line">　　o.m(); <span class="comment">// 1 说明test执行的时候this指向的是o这个对象，所以才能获取到x</span></div></pre></td></tr></table></figure></p>
<p>　　再来看个例子<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    <span class="attr">a</span>:<span class="number">10</span>,</div><div class="line">    <span class="attr">b</span>:&#123;</div><div class="line">        <span class="attr">a</span>:<span class="number">12</span>,</div><div class="line">        <span class="attr">fn</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.a); <span class="comment">//12 这里可以看出this指向的b对象而不是o对象，所以this只指向它的上一级对象</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">o.b.fn();</div></pre></td></tr></table></figure></p>
<p>　　对上面函数进行下稍微的改造<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> o = &#123;</div><div class="line">    <span class="attr">a</span>:<span class="number">10</span>,</div><div class="line">    <span class="attr">b</span>:&#123;</div><div class="line">        <span class="attr">a</span>:<span class="number">12</span>,</div><div class="line">        <span class="attr">fn</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.a); <span class="comment">//undefined</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//window</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> j = o.b.fn;</div><div class="line">j(); <span class="comment">//当将方法赋值给一个全局变量后再调用，此时就是window对象调用，由于全局没有a变量，所以this.a返回undefined,this返回window</span></div></pre></td></tr></table></figure></p>
<p>　　这样看下来后应该对<code>this</code>的指向有一个基本的了解了。接下来说闭包：<br><br>　　文章开头引用的代码其实就是一个闭包，是我在看阮一峰闭包博客的时候看到的代码，开始是想了解闭包的，接过被带偏跑去看<code>this</code>指向了。<br><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">var</span> n=<span class="number">999</span>;</div><div class="line">　　　　<span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　　　alert(n);</div><div class="line">　　　　&#125;</div><div class="line">　　　　<span class="keyword">return</span> f2;</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> result=f1();</div><div class="line">　　result(); <span class="comment">// 999</span></div></pre></td></tr></table></figure></p>
<p>　　将<code>f2</code>返回出来后，<code>f2</code>处于全局环境中，但是由于Js是静态作用域，变量的作用域在声明的时候就已经确定并且不会再改变，所以<code>f2</code>函数执行的时候作用域还是<code>f1</code>，因此<code>f2</code>在全局环境下执行的时候还是可以访问到<code>f1</code>中的变量，而<code>f2</code>执行后返回的值，由于<code>f2</code>处于全局变量，所以返回出来的值也在全局环境中，但是返回后这个值一直存在于全局环境中，而这个值的存在依赖于<code>f2</code>，<code>f2</code>又依赖于外部的<code>f1</code>，所以<code>f1</code>函数在调用完成后不会被内存回收机制回收，一直存在于内存中。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">var</span> n=<span class="number">999</span>;</div><div class="line">　　　　nAdd=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;n+=<span class="number">1</span>&#125;</div><div class="line">　　　　<span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　　　alert(n);</div><div class="line">　　　　&#125;</div><div class="line">　　　　<span class="keyword">return</span> f2;</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> result=f1();</div><div class="line">　　result(); <span class="comment">// 999</span></div><div class="line">　　nAdd();</div><div class="line">　　result(); <span class="comment">// 1000</span></div></pre></td></tr></table></figure></p>
<p>　　上面代码中<code>f1</code>函数调用了两次，返回的结果都是正常的，说明<code>var n = 999;</code>一直在内存中，如果被回收了那么第二次调用的时候局部变量n就应该无法被访问到。<br>　　参考链接：<a href="http://www.codeceo.com/article/javascript-this-pointer.html" target="_blank" rel="external">码农社</a>　<a href="http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html" target="_blank" rel="external">Javascript的this用法</a>　<a href="http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="external">学习Javascript闭包（Closure）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　今天理解两个难点，闭包和&lt;code&gt;this&lt;/code&gt;指向，闭包其实现在还是似懂非懂，需要有空运用一下闭包可能会更加理解。&lt;br&gt;&lt;br&gt;　　先说下&lt;code&gt;this&lt;/code&gt;指向问题：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&quot;The Window&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; object = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　　　&lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;My Object&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　　　&lt;span class=&quot;attr&quot;&gt;getNameFunc&lt;/span&gt; : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　　　　　&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　　　　　　　&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　　　　　&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　　　&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　　&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(object.getNameFunc()());&lt;span class=&quot;comment&quot;&gt;//The Window&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(object.getNameFunc();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//  function()&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　&lt;span class=&quot;comment&quot;&gt;//　　　　return function()&amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　&lt;span class=&quot;comment&quot;&gt;//　　　　　　return this.name;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;　&lt;span class=&quot;comment&quot;&gt;//　　　　&amp;#125;;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;　　学习闭包的时候这段代码看得我很懵，想不清楚为什么this是指向window的。那么我们先了解一下&lt;code&gt;this&lt;/code&gt;指向问题。&lt;br&gt;&lt;br&gt;　　&lt;code&gt;this&lt;/code&gt;的指向在函数定义的时候是确定不了的，&lt;strong&gt;只有函数执行的时候才能确定&lt;/strong&gt;&lt;code&gt;this&lt;/code&gt;到底指向谁，实际上&lt;code&gt;this&lt;/code&gt;的最终指向的是&lt;code&gt;this&lt;/code&gt;所在函数的&lt;strong&gt;上一级对象&lt;/strong&gt;。&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Ajax发送请求</title>
    <link href="http://yoursite.com/2016/11/07/16.Ajax%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2016/11/07/16.Ajax发送请求获取数据/</id>
    <published>2016-11-07T14:31:12.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　学前端以来Js一直是我的噩梦，Ajax更是然我头疼。今天在公司看了好久的Ajax，后来结合微专业的视频看下来思路总算是有点清晰了，也终于了解了那几个参数是怎么回事，其实应该早就该搞懂的东西。下面说说我如今对Ajax的理解情况（还是很菜）。<br><br>　　首先要发起ajax先要创建一个 <code>XMLHttpRequest</code> 对象，老版本IE使用<code>ActiveX</code> 对象，但我现在没这个需求，也就不考虑这个情况。<br><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest;</div></pre></td></tr></table></figure></p>
<p>发送请求<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//第一个参数为方法，GET或POST；第二个参数为url地址，第三个参数为是否异步加载，默认true为异步加载。</span></div><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"index.json"</span>,<span class="literal">true</span>);</div><div class="line"><span class="comment">//因为是get请求，所以不发送数据；</span></div><div class="line">xmlhttp.send(<span class="literal">null</span>);</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p><code>onreadystatechange</code>可以监视<code>readyState</code>的状态，当<code>readyState</code>的值为<code>4</code>，并且<code>status</code>的值为<code>200</code>时，说明请求成功，接下来执行回调函数。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(xhr.readyState==<span class="number">4</span> &amp;&amp; xhr.status==<span class="number">200</span>)&#123;</div><div class="line">            <span class="comment">//请求的数据为json，所以用JSON.parse()转为对象再操作</span></div><div class="line">            <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(xhr.responseText);</div><div class="line">            <span class="built_in">console</span>.log(data);</div><div class="line">            <span class="comment">//然后就可以将数据填充到html结构中去了</span></div><div class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"p"</span>).innerHTML=<span class="string">'我叫'</span> + data.name + <span class="string">',今年'</span> + data.age + <span class="string">'岁，是个'</span> + data.sex + <span class="string">'。'</span></div><div class="line">        &#125;</div></pre></td></tr></table></figure></p>
<p>下面是一个简单的demo代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"p"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">！--</span> 按钮绑定函数 <span class="attr">--</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"Ajax();"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">        <span class="comment">//将Ajax封装成一个函数</span></div><div class="line">		<span class="function"><span class="keyword">function</span> <span class="title">Ajax</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			<span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">			xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">				<span class="keyword">if</span>(xhr.readyState==<span class="number">4</span> &amp;&amp; xhr.status==<span class="number">200</span>)&#123;</div><div class="line">					<span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(xhr.responseText);</div><div class="line">					<span class="built_in">console</span>.log(data);</div><div class="line">					<span class="built_in">document</span>.getElementById(<span class="string">"p"</span>).innerHTML=<span class="string">'我叫'</span> + data.name + <span class="string">',今年'</span> + data.age + <span class="string">'岁，是个'</span> + data.sex + <span class="string">'。'</span></div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			xhr.open(<span class="string">'get'</span>,<span class="string">'index.json'</span>);</div><div class="line">			xhr.send(<span class="literal">null</span>);</div><div class="line">		&#125;</div><div class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>今天我突然想通了，写技术日志的意义，一个是输出自己学到的东西，还有一个就是当做笔记，至少在下次遇到这方面问题的时候可以直接到自己博客上找而不用去google、百度，至少自己组织的语言解释看起来总比看别人的来的容易理解。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　学前端以来Js一直是我的噩梦，Ajax更是然我头疼。今天在公司看了好久的Ajax，后来结合微专业的视频看下来思路总算是有点清晰了，也终于了解了那几个参数是怎么回事，其实应该早就该搞懂的东西。下面说说我如今对Ajax的理解情况（还是很菜）。&lt;br&gt;&lt;br&gt;　　首先要发起ajax先要创建一个 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 对象，老版本IE使用&lt;code&gt;ActiveX&lt;/code&gt; 对象，但我现在没这个需求，也就不考虑这个情况。&lt;br&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发送请求&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第一个参数为方法，GET或POST；第二个参数为url地址，第三个参数为是否异步加载，默认true为异步加载。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;xmlhttp.open(&lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;index.json&quot;&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//因为是get请求，所以不发送数据；&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;xmlhttp.send(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>新的計劃</title>
    <link href="http://yoursite.com/2016/11/06/15.%E6%96%B0%E7%9A%84%E8%AE%A1%E5%88%92/"/>
    <id>http://yoursite.com/2016/11/06/15.新的计划/</id>
    <published>2016-11-06T14:44:34.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　前幾天在網易的前端羣上發現一個同學的博客，看了之後感觸挺深，他的博客建得挺晚，但是裏面已經輸出了大量的內容，雖然都還是前端比較基礎的知識點，但是說實話我能看懂的還是不多，Js方面我還是比較薄弱，雖然Js弱類型語言，但是對我這個沒一點編程基礎的菜鳥來說，看着那堆原生的API還是有點頭疼，所以從我開始接觸Js以來一直有點抗拒Js，一看就犯困。<br><a id="more"></a><br>　　10月22日來杭州找工作，剛來的時候我已經打算豁出去了，身上帶的錢不多，我知道自己在前端方面還很菜，寫寫靜態頁面也許沒什麼大問題，用jQuery寫點簡單的交互邏輯，簡單的動畫也沒問題，但我覺得是個人學一兩個月都可以做到這種程度。所以那時候我都不敢想象如果我來杭州把身上的積蓄都花光了還沒找到工作那我改怎麼辦。幸運的是在25號終於有了一家公司篩選通過了我的簡歷。我突然很興奮，因爲在拉鉤上投了幾十份的簡歷，除了這一份都被標記爲不合適或者連個回應都沒有，所以突然看到有家公司通過了我怎麼能不興奮，星期二傍晚接到了面試通知，星期三一大早就興衝衝地趕過去了。結果那家公司因爲在轉型期，沒有前端，所以面試的時候也沒面技術，了解了一下基本情況就讓我開始上班了。那天晚上興奮得睡不着覺。這算是我在前端的道路上邁出了一步。在家呆了兩個月，失過業才知道有工作是一件幸福的事。在家的日子真的一點都不好過，倒不是父母催，而是怕自己學完了也找不到工作。<br><br>　　現在已經上班一個多星期了，與同事相處也還算融洽，但是進入工作環境後才越來越發覺Js的重要，特別是與後端的Ajax數據傳輸，雖然我現在還沒接觸到，因爲手上的項目還在設計階段。前端還接不上手。但是看着公司以前的項目其實心裏也很沒底，因爲看着那些Js，還有移動端我沒接觸過，因爲之前接觸的都是PC端，不清楚移動端的Js觸發和PC端會不會有什麼不同，移動端的框架、庫我也不了解，所以內心其實聽崩潰的，好在公司現在也只把我當成實習生，那我就拼命學吧。<br>　　前段時間像只無頭蒼蠅一樣，不知道學什麼，jQuery、移動端框架、原生Js、vue.js，真的很崩潰，不知道學什麼，什麼都要學，不知道如何分配時間。後來還是覺得原生Js比較重要，但是高程太難啃，所以決定從阮一峯的Js筆記入手，先把那個好好看一遍，現在看到函數了，雖然之前也看過，但是之前只是過一遍，其實很多都沒有看懂，現在重新看有了很多新的收獲。在公司就盡力處理好公司的事，回來後就努力學Js，這就是現在的日常，也是計劃。<br><br>　　今天開始每星期寫個總結，可以的話就定個下星期的計劃。這星期馬上就要過去了，下星期周末打算把Js的筆記整理一下發到博客上。暫時就這麼定吧。<br></p>
<center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=426881506&auto=1&height=66"></iframe></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　前幾天在網易的前端羣上發現一個同學的博客，看了之後感觸挺深，他的博客建得挺晚，但是裏面已經輸出了大量的內容，雖然都還是前端比較基礎的知識點，但是說實話我能看懂的還是不多，Js方面我還是比較薄弱，雖然Js弱類型語言，但是對我這個沒一點編程基礎的菜鳥來說，看着那堆原生的API還是有點頭疼，所以從我開始接觸Js以來一直有點抗拒Js，一看就犯困。&lt;br&gt;
    
    </summary>
    
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
      <category term="一周小結" scheme="http://yoursite.com/tags/%E4%B8%80%E5%91%A8%E5%B0%8F%E7%B5%90/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu16.04网易云托盘图标显示出做及微信应用分享</title>
    <link href="http://yoursite.com/2016/10/06/14.ubuntu16.04%E7%BD%91%E6%98%93%E4%BA%91%E6%89%98%E7%9B%98%E5%9B%BE%E6%A0%87%E6%98%BE%E7%A4%BA%E5%87%BA%E5%81%9A%E5%8F%8A%E5%BE%AE%E4%BF%A1%E5%BA%94%E7%94%A8%E5%88%86%E4%BA%AB/"/>
    <id>http://yoursite.com/2016/10/06/14.ubuntu16.04网易云托盘图标显示出做及微信应用分享/</id>
    <published>2016-10-05T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　今天无意间打开贴吧发现之前在elementary OS吧发的关于网易云托盘图标的求助帖有了回复,试了一下发现问题解决了,顺便还发现了一个第三方微信应用,虽然是基于网页版的,但是这个版本是有托盘的，所以拿出来分享给大家。<br><br>　　先说云音乐问题：<br></p>
<p><center><img src="https://cloud.githubusercontent.com/assets/17524418/19153864/badbf2f2-8c0a-11e6-8102-213021f310f1.jpeg" style="box-shadow:2px 2px 3px #aaaaaa;"></center><br>　　这是我之前网易云的托盘图标，无法正常显示，贴吧也有不少吧友遇到和我一样的问题。</p>
<p><center><img src="https://cloud.githubusercontent.com/assets/17524418/19153857/b6aa1920-8c0a-11e6-9952-e7c47b3240e5.jpeg" style="box-shadow:2px 2px 3px #aaaaaa;"></center><br>　　这是修复后的托盘，小问题还是有，但至少使用上是没问题了，这样直接看也看不出什么，点击的时候有点小问题。<br><a id="more"></a><br>　　下面贴上方法：<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">编辑云音乐的.desktop文件：sudo vi /usr/share/applications/netease-cloud-music.desktop（编辑工具根据实际情况而定）</div><div class="line">在原来的Exec那行的前面加上：env XDG_CURRENT_DESKTOP=Unity</div><div class="line">比如：然后把原来的Exec那行：Exec=netease-cloud-music %U修改为：Exec=env XDG_CURRENT_DESKTOP=Unity netease-cloud-music %U</div><div class="line">保存关闭编辑器，再打开就会发现托盘能正常使用了。</div></pre></td></tr></table></figure></p>
<p>　　下面说我分享的微信应用：<br><br>    <a href="https://github.com/geeeeeeeeek/electronic-wechat" target="_blank" rel="external">Electronic WeChat</a>是基于<a href="https://github.com/electron/electron" target="_blank" rel="external">Electron</a>开发的应用，Electron应用我一直在用，但不知道微信也有，今天看到回复我云音乐的吧友回复我才知道这么个应用。<br><br>　　这是官方的图：</p>
<p><center><img src="https://cloud.githubusercontent.com/assets/17524418/19154618/dc77430a-8c0d-11e6-966a-f4ed44e7b469.png" style="box-shadow:2px 2px 3px #aaaaaa;"></center><br>    安装很简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/geeeeeeeeek/electronic-wechat.git</div><div class="line">cd electronic-wechat</div><div class="line">npm install &amp;&amp; npm start(这一步如果出错就把clone下来的文件夹删除后从头执行一遍)</div><div class="line">也可以下载压缩包解压然后运行里面的程序，不过我用这种方法微信无法在托盘显示</div></pre></td></tr></table></figure></p>
<p>　　更多Electronic小应用可以去<a href="http://electron.atom.io/apps/" target="_blank" rel="external">这里</a>下载，还是有不少有意思的应用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　今天无意间打开贴吧发现之前在elementary OS吧发的关于网易云托盘图标的求助帖有了回复,试了一下发现问题解决了,顺便还发现了一个第三方微信应用,虽然是基于网页版的,但是这个版本是有托盘的，所以拿出来分享给大家。&lt;br&gt;&lt;br&gt;　　先说云音乐问题：&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17524418/19153864/badbf2f2-8c0a-11e6-8102-213021f310f1.jpeg&quot; style=&quot;box-shadow:2px 2px 3px #aaaaaa;&quot;&gt;&lt;/center&gt;&lt;br&gt;　　这是我之前网易云的托盘图标，无法正常显示，贴吧也有不少吧友遇到和我一样的问题。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17524418/19153857/b6aa1920-8c0a-11e6-9952-e7c47b3240e5.jpeg&quot; style=&quot;box-shadow:2px 2px 3px #aaaaaa;&quot;&gt;&lt;/center&gt;&lt;br&gt;　　这是修复后的托盘，小问题还是有，但至少使用上是没问题了，这样直接看也看不出什么，点击的时候有点小问题。&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="elementary OS" scheme="http://yoursite.com/tags/elementary-OS/"/>
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
  </entry>
  
  <entry>
    <title>Github绑定自定义二级域名</title>
    <link href="http://yoursite.com/2016/10/05/13.Github%20pages%E7%BB%91%E5%AE%9A%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/"/>
    <id>http://yoursite.com/2016/10/05/13.Github pages绑定二级域名/</id>
    <published>2016-10-04T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　网上有很多利用github pages搭建个人博客网站并绑定域名的教程，但是有时候也许你想再开一个github pages放自己做的demo，但是如果不绑定耳机域名，这个项目的网址默认是[tit1e.xyz/XXX/XXX.html]，这是我自己的网页dome的默认网址形式，这样一来会url会比较难看，那怎么把一个二级域名将这个网站的网址解析为[demo.tit1e.xyz]呢？网上查了一些资料，自己已经摸索成功了。下面贴上方法。<br><br>　　我用的是阿里云，所以下面就一阿里云的为例子。<br><br><a id="more"></a><br>　　首先进入github的项目主页，切换到你项目文件所在的分支[我的项目是一个网页，所以项目在gh-pages上]，然后点击Create new file新建一个文件。<br><img src="https://cloud.githubusercontent.com/assets/17524418/19103334/d3407294-8b08-11e6-929d-bc15c3716c5e.jpeg" style="box-shadow:2px 2px 3px #aaaaaa;"><br>　　名字命名为CNAME，内容填上自定义的裸二级域名，注意不要加http/https协议。保存。<br><br><img src="https://cloud.githubusercontent.com/assets/17524418/19103034/09dd6d68-8b07-11e6-85dd-c5c45280c4b1.jpeg" style="box-shadow:2px 2px 3px #aaaaaa;"><br>然后进入阿里云的控制台，点击已解析的域名进入域名控制台，可以看到你之前解析的域名，点击添加解析，记录类型选择A，主机记录选择之前新建的CNAME文件中填写的域名的前缀，如我之前填的是demo.tit1e.xyz，那么在主机记录只需填demo，记录值则填你的主机IP，然后确认，等待几分钟就可以访问了。时长根据运营商不同也会不一样。<br><img src="https://cloud.githubusercontent.com/assets/17524418/19103336/d3a77728-8b08-11e6-8b0d-068bef2a488f.jpeg" style="box-shadow:2px 2px 3px #aaaaaa;"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　网上有很多利用github pages搭建个人博客网站并绑定域名的教程，但是有时候也许你想再开一个github pages放自己做的demo，但是如果不绑定耳机域名，这个项目的网址默认是[tit1e.xyz/XXX/XXX.html]，这是我自己的网页dome的默认网址形式，这样一来会url会比较难看，那怎么把一个二级域名将这个网站的网址解析为[demo.tit1e.xyz]呢？网上查了一些资料，自己已经摸索成功了。下面贴上方法。&lt;br&gt;&lt;br&gt;　　我用的是阿里云，所以下面就一阿里云的为例子。&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git克隆远程仓库进行修改提交</title>
    <link href="http://yoursite.com/2016/10/04/12.git%E5%85%8B%E9%9A%86%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E8%BF%9B%E8%A1%8C%E4%BF%AE%E6%94%B9%E6%8F%90%E4%BA%A4/"/>
    <id>http://yoursite.com/2016/10/04/12.git克隆远程仓库进行修改提交/</id>
    <published>2016-10-03T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　之前云课堂大作业在windows下开发，现在因为使用EOS比较多，所以想把项目克隆下来然后修改提交，但是由于没接触过git命令行，windows下是使用客户端进行提交的，所以到了ubuntu下对着这对命令行是一脸懵逼，网上找了半天教程总算是能达到我想要的要求了。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">cd至目标文件夹</div><div class="line">git init</div><div class="line">git clone https://github.com/Tit1e/homework.git</div><div class="line">cd进入仓库文件夹</div><div class="line">git checkout -b gh-pages origin/gh-pages</div><div class="line">git status//查看修改了哪些文件，可以不执行</div><div class="line">git add .</div><div class="line">git commit //修改说明</div><div class="line">git config --global push.default simple //第一次提交的时候执行，之后直接直接git push</div><div class="line">git push //提交</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　之前云课堂大作业在windows下开发，现在因为使用EOS比较多，所以想把项目克隆下来然后修改提交，但是由于没接触过git命令行，windows下是使用客户端进行提交的，所以到了ubuntu下对着这对命令行是一脸懵逼，网上找了半天教程总算是能达到我想要的要求了。&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="elementary OS" scheme="http://yoursite.com/tags/elementary-OS/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Elementary OS Loki 折騰筆記</title>
    <link href="http://yoursite.com/2016/09/29/11.elementaryOSLoki%E6%8A%98%E9%A8%B0%E7%AD%86%E8%A8%98/"/>
    <id>http://yoursite.com/2016/09/29/11.elementaryOSLoki折騰筆記/</id>
    <published>2016-09-28T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><center><img src="https://cloud.githubusercontent.com/assets/17524418/18955306/7515b68a-8689-11e6-9ffe-9e14494271b0.jpeg" style="box-shadow:2px 2px 3px #aaaaaa;"></center><br>　　前兩天折騰黑蘋果，想在自己的小黑上裝個黑蘋果玩玩，結果沒想到折騰了差不多一天多毫無進展，連系統安裝界面都沒見到，更加不用說之後的安裝驅動了。如果一直鉆牛角尖，其實代價挺大的，畢竟我現在無業遊民一個不是閒的沒事幹。於是我昨天傍晚的時候徹底放棄了黑蘋果計劃，還是以後工作了攢錢買個白蘋果吧。<br><br><br><a id="more"></a><br>但是我都打算折騰了不搞出點事情我又不甘心，所以我打算把Freya裝成Loki，反正好久沒有重裝了，就折騰一下這個吧。於是輕車熟路刻U盤，裝系統，一路下來都沒什麼問題，結果在裝chrome的時候看了Linux公社的教程，chrome沒裝上，源還出了問題，網上查了一下還有不少人中招的，查了半天也沒查出什麼結果，索性就重裝了，反正很快，然後問題就來了，我把備份博客的U盤給插了上去，開機USB啓動不了，而之系統裝好時敲好拔U盤時除了一點小問題，我以爲是U盤裏的系統被我弄壞了的緣故，又正好趕上要吃飯，我就重新刻了下U盤，吃完飯回來又重裝了一遍，然後開始折騰其他的東西，後來打算裝博客，安裝hexo的時候又出了點問題，於是我想起之前有把命令行存下來，這才想起了備份的U盤，拿起U盤一插，發現容量怎麼少了這麼多，之前U盤裏我備份了不少東西，已經快滿了，結果現在一看才用了一個多G的空間，點開一看，臥槽爲什麼裏面變成elementary OS的系統了？！當時腦子一片空白，之前已經很小心，裝系統前還特意看了備份U盤中的博客，感覺萬無一失了才裝的系統。<br><br><br>　　而事實證明:<strong>生活處處有驚喜，這世界上也沒有萬無一失的事情。</strong><br><br><br>接下來就是瘋狂百度google各種恢復blog的方法，然而並沒有，源文件沒了就是沒了，github上只有public文件夾中的內容，源文件是不上穿的，這也是爲什麼hexo輕巧快速的原因，好在我的另一臺電腦種還有幾個月前的備份，慶幸幸好沒有把這破筆記本扔了。看了一下丟失4篇文章。最後找來找去，把github上的文件打包下載下來，生成的html文件還是在的，所以裏面內容也在，於是把html裏的多餘標籤什麼都刪除，只保留內容部分，再把文件存爲markdown格式，然後本地部署看了一下，還好生成的頁面是正常的。折騰到1點總算是恢復了，終於鬆了一口氣。<br><br><br>　　下面是我個人的elementary OS的一些基本配置：<br><br></p>
<h2 id="安装elementary-tweaks"><a href="#安装elementary-tweaks" class="headerlink" title="安装elementary-tweaks"></a>安装elementary-tweaks</h2><p>elementary OS下必備的美化軟件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">更新软件源</div><div class="line">$ sudo apt update</div><div class="line"></div><div class="line">安装add-apt-repository命令所在的软件包</div><div class="line">$ sudo apt install software-properties-common</div><div class="line"></div><div class="line">使用add-apt-repository命令添加ppa</div><div class="line">$ sudo add-apt-repository ppa:philip.scott/elementary-tweaks</div><div class="line"></div><div class="line">再次更新软件源</div><div class="line">$ sudo apt update</div><div class="line"></div><div class="line">安装elementary-tweaks</div><div class="line">$ sudo apt install elementary-tweaks</div></pre></td></tr></table></figure></p>
<h2 id="網易雲音樂"><a href="#網易雲音樂" class="headerlink" title="網易雲音樂"></a>網易雲音樂</h2><p>中毒太深，無法自拔，好在網易良心，出了ubuntu客戶端。<strong>網易大法好！</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">官网下载对应的deb包</div><div class="line">打开终端，cd至deb包所在文件夹</div><div class="line">$ sudo dpkg -i XXXXX.deb</div><div class="line">$ sudo apt-get -f install</div><div class="line">$ sudo dpkg -i XXXXX.deb</div></pre></td></tr></table></figure></p>
<h2 id="安装并配置fcitx输入法框架"><a href="#安装并配置fcitx输入法框架" class="headerlink" title="安装并配置fcitx输入法框架"></a>安装并配置fcitx输入法框架</h2><p>習慣用搜狗，linux下的搜狗還是挺良心的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">打开终端，更新软件源</div><div class="line">$ sudo apt update</div><div class="line">直接安装需要的输入法包，如fcitx-googlepinyin，fcitx-pinyin，fcitx-table-wubi等，其他基础软件包会自动装上。</div><div class="line">$ sudo apt install fcitx-googlepinyin</div><div class="line">打开“系统设置”、“语言和区域”；点击“解锁”，输入密码；在左边“已安装的语言”中选择Chinese，然后点击“设置系统语言”</div><div class="line">打开“系统设置”、“键盘”、“布局”；把左边的布局都删掉，只保留“英语（美国）”</div><div class="line">重启</div></pre></td></tr></table></figure></p>
<h2 id="安裝chrome"><a href="#安裝chrome" class="headerlink" title="安裝chrome"></a>安裝chrome</h2><p>必備，沒啥好說的，linux下基本也就chrome、firefox、chromium了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</div><div class="line">$ sudo dpkg -i google-chrome-stable_current_amd64.deb</div><div class="line">$ sudo apt-get -f install</div><div class="line">$ sudo dpkg -i google-chrome-stable_current_amd64.deb</div><div class="line">PS、或者在自带的应用中心直接安装chromium</div></pre></td></tr></table></figure></p>
<h2 id="node-js安裝"><a href="#node-js安裝" class="headerlink" title="node.js安裝"></a>node.js安裝</h2><p><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>需要，其他有些軟件也需要node，必裝<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt install nodejs-legacy</div></pre></td></tr></table></figure></p>
<h2 id="安装guake终端"><a href="#安装guake终端" class="headerlink" title="安装guake终端"></a>安装guake终端</h2><p>剛發現的一款終端，用着挺方便<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ apt-get install guake</div><div class="line">然后在系统设置--&gt;Tweaks--&gt;Cerbere中设置开机启动</div><div class="line">呼出快捷键：F12，更多设置可在终端首选项中设置</div></pre></td></tr></table></figure></p>
<h2 id="安裝7z"><a href="#安裝7z" class="headerlink" title="安裝7z"></a>安裝7z</h2><p>折騰過程中遇到需要解壓7z格式壓縮包，記錄下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ apt-get install p7zip</div><div class="line">解压</div><div class="line">$ 7z x filename.7z</div></pre></td></tr></table></figure></p>
<h2 id="安裝字體管家"><a href="#安裝字體管家" class="headerlink" title="安裝字體管家"></a>安裝字體管家</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install font-manager</div></pre></td></tr></table></figure>
<h2 id="git克隆項目"><a href="#git克隆項目" class="headerlink" title="git克隆項目"></a>git克隆項目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">在目标文件夹git init</div><div class="line">cd进入项目文件夹</div><div class="line">git branch –r显示所有分支</div><div class="line">git checkout &lt;目标分支&gt;</div></pre></td></tr></table></figure>
<h2 id="安装sublime-text3以及中文支持"><a href="#安装sublime-text3以及中文支持" class="headerlink" title="安装sublime-text3以及中文支持"></a>安装sublime-text3以及中文支持</h2><p>sublime-text3在ubuntu中不支持中文輸入，但有解決辦法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">安装sublime</div><div class="line">$ sudo add-apt-repository ppa:webupd8team/sublime-text-3</div><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install sublime-text-installer</div><div class="line">中文支持，注意需要使用fcitx</div><div class="line">$ sudo apt-get update &amp;&amp; sudo apt-get upgrade</div><div class="line">$ git clone https://github.com/lyfeyaj/sublime-text-imfix.git</div><div class="line">$ cd sublime-text-imfix &amp;&amp; ./sublime-imfix</div><div class="line">安装完成后启动器中可能会出现两个图标，一个是自带的，一个是后面添加的，以前用该方法只能通过终端输入subl运行才能调用输入法，点击图标需要改图标文件配置后才能调用，现在已经被修复了，所以只要删除自带图标就可以了</div><div class="line">解决办法：</div><div class="line">$ sudo rm /usr/share/applications/sublime_text.desktop</div><div class="line">Ps:新图标的名字为sublime-text.desktop，启动器现实的名字是相同的</div></pre></td></tr></table></figure></p>
<p>以上大致就是我的elementary OS的基本配置，至於其他零零碎碎的配置我就不放上來了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17524418/18955306/7515b68a-8689-11e6-9ffe-9e14494271b0.jpeg&quot; style=&quot;box-shadow:2px 2px 3px #aaaaaa;&quot;&gt;&lt;/center&gt;&lt;br&gt;　　前兩天折騰黑蘋果，想在自己的小黑上裝個黑蘋果玩玩，結果沒想到折騰了差不多一天多毫無進展，連系統安裝界面都沒見到，更加不用說之後的安裝驅動了。如果一直鉆牛角尖，其實代價挺大的，畢竟我現在無業遊民一個不是閒的沒事幹。於是我昨天傍晚的時候徹底放棄了黑蘋果計劃，還是以後工作了攢錢買個白蘋果吧。&lt;br&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="elementary OS" scheme="http://yoursite.com/tags/elementary-OS/"/>
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
  </entry>
  
  <entry>
    <title>响应式页面的简单实现</title>
    <link href="http://yoursite.com/2016/08/31/10.%E5%93%8D%E5%BA%94%E5%BC%8F%E9%A1%B5%E9%9D%A2%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2016/08/31/10.响应式页面的简单实现/</id>
    <published>2016-08-30T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><h1 id="响应式网页设计"><a href="#响应式网页设计" class="headerlink" title="响应式网页设计"></a>响应式网页设计</h1><blockquote><p></p>
<p>响应式网页设计（英语：Responsive web design，通常缩写为RWD），或称自适应网页设计、回应式网页设计、对应式网页设计。 是一种网页设计的技术做法，该设计可使网站在多种浏览设备（从桌面电脑显示器到移动电话或其他移动产品设备）上阅读和导航，同时减少缩放、平移和滚动。——摘自维基百科</p><br></blockquote><br><a id="more"></a><br><a id="more"></a><br><h1 id="响应式网站的简单实现"><a href="#响应式网站的简单实现" class="headerlink" title="响应式网站的简单实现"></a>响应式网站的简单实现</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">“viewport”</span> <span class="attr">content</span>=<span class="string">“</span><br><span class="line">    width=device-width, </span><br><span class="line">    initial-scale=1.0,</span><br><span class="line">    user-scalable=no</span><br><span class="line">“</span> /&gt;</span></span><br></pre></td></tr></table></figure><br><p>上述代码是对<strong>viewport</strong>的设置，&lt;meta&gt;标签嵌套在&lt;head&gt;标签中。<br><br><strong>“width=device-width”</strong> 属性是设置页面宽度为设备宽度。<br><br><strong>“initial-scale=1.0”</strong> 属性是设置页面缩放比例为1.0，即正常大小。<br><br><strong>“user-scalable=no”</strong>  属性是设置禁止用户手动缩放页面大小，因为响应式网站一般在不同设备都能正常显示网站内容，所以一般不需要用户手动缩放。<br><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/<em>设备屏幕宽度大于所设的最小宽度时，使用该样式</em>/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:)&#123;</span><br><span class="line">    <span class="comment">/<em>CSS样式</em>/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/<em>设备屏幕宽度小于于所设的最大宽度时，使用该样式</em>/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width:)&#123;</span><br><span class="line">    <span class="comment">/<em>CSS样式</em>/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/<em>设备屏幕宽度在所设宽度区间内时，使用该样式</em>/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:) and (max-width:)&#123;</span><br><span class="line">    <span class="comment">/<em>CSS样式</em>/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><br><p><strong>注：”@media”需写在CSS样式中，并且要放在一般显示样式之后，只有当一般显示样式不适配的时候才会匹配@media中的样式。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;h1 id=&quot;响应式网页设计&quot;&gt;&lt;a href=&quot;#响应式网页设计&quot; class=&quot;headerlink&quot; title=&quot;响应式网页设计&quot;&gt;&lt;/a&gt;响应式网页设计&lt;/h1&gt;&lt;blockquote&gt;&lt;/p&gt;
&lt;p&gt;响应式网页设计（英语：Responsive web design，通常缩写为RWD），或称自适应网页设计、回应式网页设计、对应式网页设计。 是一种网页设计的技术做法，该设计可使网站在多种浏览设备（从桌面电脑显示器到移动电话或其他移动产品设备）上阅读和导航，同时减少缩放、平移和滚动。——摘自维基百科&lt;/p&gt;&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>用table、flex、float、position等实现一些元素、页面的布局</title>
    <link href="http://yoursite.com/2016/08/30/9.%E7%94%A8table%E3%80%81flex%E3%80%81float%E3%80%81position%E7%AD%89%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%BA%9B%E5%85%83%E7%B4%A0%E3%80%81%E9%A1%B5%E9%9D%A2%E7%9A%84%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2016/08/30/9.用table、flex、float、position等实现一些元素、页面的布局/</id>
    <published>2016-08-29T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><p>整理了一些布局的实现方案，算是笔记，发到博客上也希望能帮助到一些有需要的人。<br><br>注：文中列出的只是核心代码，在实际应用中可能还需加入”width”/“height”/“bancground-color”等css样式。<br></p><p></p>
<p></p><h1 id="居中布局"><a href="#居中布局" class="headerlink" title="居中布局 "></a>居中布局 <br></h1><p>之后的布局讲解将以下面的这段代码为模板<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“child”</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><br><a id="more"></a><br><a id="more"></a><p></p>
<p></p><h2 id="元素的水平居中："><a href="#元素的水平居中：" class="headerlink" title="元素的水平居中："></a>元素的水平居中：</h2><h3 id="inline-block-text-align"><a href="#inline-block-text-align" class="headerlink" title="inline-block + text-align"></a>inline-block + text-align</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    .child&#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        text-align: left;</span><br><span class="line">    &#125;</span><br><span class="line">    .parent&#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：兼容性较好，可以兼容到IE6、IE7，但IE6、IE7不支持inline-block，需要用其他方法实现IE6/7中的inline-block。</span><br><span class="line">缺点：如果不想文字水平居中需单独设置child的text-align，因此会产生额外的代码来修复text-align:center造成的一些问题。</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="table-margin"><a href="#table-margin" class="headerlink" title="table + margin"></a>table + margin</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    .child&#123;</span><br><span class="line">        display: table;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：只对child设置样式，不影响parent，兼容到IE8级以上浏览器。</span><br><span class="line">缺点：IE6/7不支持display:table属性，但可以通过把&lt;div&gt;结构换成&lt;table&gt;结构来实现兼容。</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="absolute-transform"><a href="#absolute-transform" class="headerlink" title="absolute + transform"></a>absolute + transform</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        position:relative;</span><br><span class="line">    &#125;</span><br><span class="line">    .child&#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 50%;</span><br><span class="line">        transform: translateX(-50%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：绝对定位脱离文档流，因此居中对象不会对其他元素产生影响</span><br><span class="line">缺点：transform不支持IE6/7/8，因此兼容性较差，在高版本浏览器中可能需要加私有前缀</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="flex-justify-content"><a href="#flex-justify-content" class="headerlink" title="flex + justify-content"></a>flex + justify-content</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">方法一</span><br><span class="line">    .parent&#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        justify-content: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">方法二</span><br><span class="line">    .parent&#123;</span><br><span class="line">        display: flex;</span><br><span class="line">    &#125;</span><br><span class="line">    .child&#123;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：只对parent元素修改，不影响child的样式</span><br><span class="line">缺点：flex不支持IE6/7/8，因此兼容性较差</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2 id="元素的垂直居中："><a href="#元素的垂直居中：" class="headerlink" title="元素的垂直居中："></a>元素的垂直居中：</h2><h3 id="table-cell-vertical-align"><a href="#table-cell-vertical-align" class="headerlink" title="table-cell + vertical-align"></a>table-cell + vertical-align</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：支持IE8及以上版本浏览器</span><br><span class="line">缺点：如果需要支持IE6/7，要将&lt;div&gt;结构换成&lt;table&gt;结构</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="absolute-transform-1"><a href="#absolute-transform-1" class="headerlink" title="absolute + transform"></a>absolute + transform</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    .child&#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 50%;</span><br><span class="line">        transform: translateY(-50%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：绝对定位脱离文档流，因此居中对象不会对其他元素产生影响</span><br><span class="line">缺点：transform不支持IE6/7/8，因此兼容性较差，在高版本浏览器中可能需要加私有前缀</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="flex-align-items"><a href="#flex-align-items" class="headerlink" title="flex + align-items"></a>flex + align-items</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：只对parent元素修改，不影响child的样式</span><br><span class="line">缺点：flex不支持IE6/7/8，因此兼容性较差</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2 id="元素的水平垂直居中（元素宽高都未知）："><a href="#元素的水平垂直居中（元素宽高都未知）：" class="headerlink" title="元素的水平垂直居中（元素宽高都未知）："></a>元素的水平垂直居中（元素宽高都未知）：</h2><h3 id="inline-block-text-align-table-cell-vertical-align"><a href="#inline-block-text-align-table-cell-vertical-align" class="headerlink" title="inline-block + text-align + table-cell + vertical-align"></a>inline-block + text-align + table-cell + vertical-align</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        display: table-cell;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">    &#125;</span><br><span class="line">    .child&#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：兼容性较高，支持IE8及以上浏览器</span><br><span class="line">缺点：如果需要支持IE6/7，要将&lt;div&gt;结构换成&lt;table&gt;结构</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="absolute-transform-2"><a href="#absolute-transform-2" class="headerlink" title="absolute + transform"></a>absolute + transform</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    .child&#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 50%;</span><br><span class="line">        top: 50%;</span><br><span class="line">        transform: translate(-50%,-50%)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：绝对定位脱离文档流，因此居中对象不会对其他元素产生影响</span><br><span class="line">缺点：transform不支持IE6/7/8，因此兼容性较差，在高版本浏览器中可能需要加私有前缀</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="flex-justify-content-align-items"><a href="#flex-justify-content-align-items" class="headerlink" title="flex + justify-content + align-items"></a>flex + justify-content + align-items</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">justify-content</span>: center;</span><br><span class="line">        <span class="attribute">align-items</span>:center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：只设置<span class="selector-tag">parent</span>，不影响<span class="selector-tag">child</span></span><br><span class="line">缺点：兼容性较差，可能只有高版本浏览器能实现</span><br></pre></td></tr></table></figure><p></p>
<p></p><h1 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h1><h2 id="一列定宽一列自适应布局"><a href="#一列定宽一列自适应布局" class="headerlink" title="一列定宽一列自适应布局"></a>一列定宽一列自适应布局</h2><p>之后的布局讲解将以下面的这段代码为模板,如模版有变动将单独列出<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p></p>
<p></p><h3 id="float-margin"><a href="#float-margin" class="headerlink" title="float + margin"></a>float + margin</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.left</span>&#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">120px</span>;<span class="comment">/<em>多的20px为列之间的空隙</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：容易理解</span><br><span class="line">缺点：兼容性有一点小问题，<span class="selector-tag">IE6</span>中，因为<span class="selector-tag">left</span>浮动，<span class="selector-tag">right</span>不浮动，右边的文字会往右缩进3像素，解决方法：在<span class="selector-tag">left</span>的<span class="selector-tag">css</span>中加入“<span class="selector-tag">margin-right</span>: <span class="selector-tag">-100px</span>;”。清除浮动会打乱布局</span><br></pre></td></tr></table></figure><p></p>
<p></p><p>改进上述方法，解决兼容性问题<br><br><strong>此结构只适用于float + margin + (fix)方法</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right-fix”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p></p>
<p></p><h3 id="float-margin-fix"><a href="#float-margin-fix" class="headerlink" title="float + margin + (fix)"></a>float + margin + (fix)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.left</span>&#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right-fix</span>&#123;</span><br><span class="line">        <span class="attribute">float</span>: right;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">margin-left</span>:-<span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">120px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：兼容<span class="selector-tag">IE6</span>及以上所有浏览器</span><br><span class="line">缺点：结构、样式会相对复杂</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="float-overflow"><a href="#float-overflow" class="headerlink" title="float + overflow"></a>float + overflow</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.left</span>&#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：样式简单</span><br><span class="line">缺点：<span class="selector-tag">IE6</span>不支持</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="table"><a href="#table" class="headerlink" title="table"></a>table</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: table;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">table-layout</span>:fixed;<span class="comment">/<em>提升渲染速度，布局优先</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span>,<span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">padding-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙,table-cell无法设置margin，所以设置padding</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：兼容<span class="selector-tag">IE8</span>及以上浏览器</span><br><span class="line">缺点：代码比较复杂</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：实现比较容易</span><br><span class="line">缺点：低版本浏览器兼容性较差，<span class="selector-tag">flex</span>只适合小范围布局，</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2 id="两列定宽一列自适应布局"><a href="#两列定宽一列自适应布局" class="headerlink" title="两列定宽一列自适应布局"></a>两列定宽一列自适应布局</h2><p><strong>此结构只适用于下面的例子</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“center”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>center<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right-fix”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p></p>
<p></p><h3 id="float-overflow-1"><a href="#float-overflow-1" class="headerlink" title="float + overflow"></a>float + overflow</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span>,<span class="selector-class">.center</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙</em>/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2 id="一列不定宽一列自适应布局"><a href="#一列不定宽一列自适应布局" class="headerlink" title="一列不定宽一列自适应布局"></a>一列不定宽一列自适应布局</h2><p><strong>之后的布局讲解将以下面的这段代码为模板,如模板有变动将单独列出</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p></p>
<p></p><h3 id="float-overflow-2"><a href="#float-overflow-2" class="headerlink" title="float + overflow"></a>float + overflow</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.left</span>,<span class="selector-class">.center</span>&#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">200px</span>;<span class="comment">/<em>这里的宽度可以随意更改,即由内容决定</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：代码量少，实现简单</span><br><span class="line">缺点：在<span class="selector-tag">IE6</span>下兼容性有问题</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="table-1"><a href="#table-1" class="headerlink" title="table"></a>table</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        display: table;</span><br><span class="line">        width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">    .left,.right&#123;</span><br><span class="line">        display: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        width: 0.1%;/<em>写成0.1%是出于兼容性考虑，1px在IE8下会有问题</em>/</span><br><span class="line">        padding-right: 20px;/<em>20px为列之间的空隙,table-cell无法设置margin，所以设置padding</em>/</span><br><span class="line">    &#125;</span><br><span class="line">    .left p&#123;</span><br><span class="line">        width: 200px;/<em>这里的宽度可以随意更改,即由内容决定</em>/</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：兼容IE8及以上浏览器</span><br><span class="line">缺点：IE6/7不支持</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="flex-1"><a href="#flex-1" class="headerlink" title="flex"></a>flex</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span>&#123;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;<span class="comment">/<em>根据内容决定</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：实现比较容易</span><br><span class="line">缺点：低版本浏览器兼容性较差，<span class="selector-tag">flex</span>只适合小范围布局，</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2 id="两列不定宽加一列自适应"><a href="#两列不定宽加一列自适应" class="headerlink" title="两列不定宽加一列自适应"></a>两列不定宽加一列自适应</h2><p><strong>此结构只适用于下面的例子</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“center”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>center<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right-fix”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p></p>
<p></p><h3 id="float-overflow-3"><a href="#float-overflow-3" class="headerlink" title="float + overflow"></a>float + overflow</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span>,<span class="selector-class">.center</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙</em>/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p>
<p></p><h2 id="等分布局"><a href="#等分布局" class="headerlink" title="等分布局"></a>等分布局</h2><p><strong>之后的布局讲解将以下面的这段代码为模板,如模板有变动将单独列出</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p></p>
<p></p><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">margin-left</span>: -<span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.column</span>&#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">box-sizing</span>: border-box;<span class="comment">/<em>可以让设置的宽度包含padding</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：兼容<span class="selector-tag">IE8</span>及以上浏览器</span><br><span class="line">缺点：当列数发生变化时需要修改<span class="selector-tag">css</span>样式</span><br></pre></td></tr></table></figure><p></p>
<p></p><h3 id="table-2"><a href="#table-2" class="headerlink" title="table"></a>table</h3><p><strong>此模板只适用于table布局</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent-fix”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“column”</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent-fix</span>&#123;</span><br><span class="line">        <span class="attribute">margin-left</span>: -<span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: table;</span><br><span class="line">        <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">table-layout</span>:fixed;<span class="comment">/<em>布局优先，单元格自动平分</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.column</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: table-cell;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：列数改变自动平分</span><br><span class="line">缺点：结构更加复杂</span><br></pre></td></tr></table></figure><br><h3 id="flex-2"><a href="#flex-2" class="headerlink" title="flex"></a>flex</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.column</span>&#123;</span><br><span class="line">        <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.column</span>+<span class="selector-class">.column</span>&#123;<span class="comment">/<em>这个选择器表示选择前一个class为“column”的下一个“column”</em>/</span></span><br><span class="line">        <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：代码量少，自动平分</span><br><span class="line">缺点：兼容性较差</span><br></pre></td></tr></table></figure><br><h2 id="等高布局"><a href="#等高布局" class="headerlink" title="等高布局"></a>等高布局</h2><p><strong>之后的布局讲解将以下面的这段代码为模板,如模板有变动将单独列出</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>left<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>right<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><br><h3 id="table-3"><a href="#table-3" class="headerlink" title="table"></a>table</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: table;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">table-layout</span>:fixed;<span class="comment">/<em>提升渲染速度，布局优先</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span>,<span class="selector-class">.right</span>&#123;</span><br><span class="line">        <span class="attribute">display</span>: table-cell;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">padding-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙,table-cell无法设置margin，所以设置padding</em>/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">背景颜色默认会覆盖在<span class="selector-tag">padding</span>区域内，使空隙无法看出，需设置<span class="selector-tag">background-clip</span><span class="selector-pseudo">:content-box</span>;使背景颜色只显示在内容区域内</span><br></pre></td></tr></table></figure><br><h3 id="flex-flex布局默认等高"><a href="#flex-flex布局默认等高" class="headerlink" title="flex(flex布局默认等高)"></a>flex(flex布局默认等高)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;<span class="comment">/<em>20px为列之间的空隙</em>/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;<span class="comment">/<em>根据内容决定</em>/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h3 id="float-1"><a href="#float-1" class="headerlink" title="float"></a>float</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    .parent&#123;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    .left,.right&#123;</span><br><span class="line">        padding-bottom: 9999px;</span><br><span class="line">        margin-bottom: -9999px;</span><br><span class="line">    &#125;</span><br><span class="line">    .left&#123;</span><br><span class="line">        float: left;</span><br><span class="line">        width: 100px;</span><br><span class="line">        margin-right;</span><br><span class="line">    &#125;</span><br><span class="line">    .right&#123;</span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">优点：兼容性好</span><br><span class="line">缺点：伪等高，视觉上等高，实际不等高</span><br></pre></td></tr></table></figure><br><h1 id="全屏布局"><a href="#全屏布局" class="headerlink" title="全屏布局"></a>全屏布局</h1><h2 id="半适应布局"><a href="#半适应布局" class="headerlink" title="半适应布局"></a>半适应布局</h2><p><strong>之后的布局讲解将以下面的这段代码为模板,如模板有变动将单独列出</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">“top”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">“left”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">“right”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">“bottom”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><br><h3 id="position-scroll"><a href="#position-scroll" class="headerlink" title="position(scroll)"></a>position(scroll)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>,<span class="selector-id">#parent</span>&#123;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">overflow</span>:hidden;&#125;</span><br><span class="line">        <span class="selector-class">.top</span>&#123;</span><br><span class="line">            <span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0</span>;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">right</span>:<span class="number">0</span>;<span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.bottom</span>&#123;</span><br><span class="line">            <span class="attribute">position</span>:absolute;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">right</span>:<span class="number">0</span>;<span class="attribute">bottom</span>:<span class="number">0</span>;<span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.left</span>&#123;</span><br><span class="line">            <span class="attribute">position</span>:absolute;<span class="attribute">left</span>:<span class="number">0</span>;<span class="attribute">top</span>:<span class="number">100px</span>;<span class="attribute">bottom</span>:<span class="number">50px</span>;<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.right</span>&#123;</span><br><span class="line">            <span class="attribute">position</span>:absolute;<span class="attribute">overflow</span>:auto;<span class="attribute">left</span>:<span class="number">200px</span>;<span class="attribute">top</span>:<span class="number">100px</span>;<span class="attribute">bottom</span>:<span class="number">50px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">IE6</span>不支持<span class="selector-tag">position</span>，如需百分比显示布局的大小，只需将代码中的具体像素改为百分比</span><br></pre></td></tr></table></figure><br><h3 id="flex-3"><a href="#flex-3" class="headerlink" title="flex"></a>flex</h3><p><strong>此模板只适用于该案例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“top”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“middle”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“bottom”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>,<span class="selector-class">.parent</span>&#123;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">overflow</span>:hidden;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line">        <span class="selector-class">.parent</span>&#123;</span><br><span class="line">            <span class="attribute">display</span>:flex;<span class="attribute">flex-direction</span>:column;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.top</span>&#123;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">background-color</span>:black;&#125;</span><br><span class="line">        <span class="selector-class">.bottom</span>&#123;<span class="attribute">height</span>:<span class="number">50px</span>;&#125;</span><br><span class="line">        <span class="selector-class">.middle</span>&#123;<span class="attribute">flex</span>:<span class="number">1</span>;<span class="attribute">display</span>:flex;&#125;</span><br><span class="line">        <span class="selector-class">.left</span>&#123;<span class="attribute">width</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">        <span class="selector-class">.right</span>&#123;<span class="attribute">flex</span>:<span class="number">1</span>;<span class="attribute">overflow</span>:auto;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">IE9</span>及以下浏览器不兼容，如需百分比显示布局的大小，只需将代码中的具体像素改为百分比</span><br></pre></td></tr></table></figure><br><h2 id="全适应布局"><a href="#全适应布局" class="headerlink" title="全适应布局"></a>全适应布局</h2><p><strong>position无法实现全适应布局，只能用flex或grid实现，这里只介绍flex实现方法<br><br>此模板只适用于该案例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“parent”</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“top”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“middle”</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“left”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“right”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">“bottom”</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>,<span class="selector-class">.parent</span>&#123;<span class="attribute">height</span>:<span class="number">100%</span>;<span class="attribute">overflow</span>:hidden;&#125;</span><br><span class="line">        <span class="selector-class">.parent</span>&#123;</span><br><span class="line">            <span class="attribute">display</span>:flex;<span class="attribute">flex-direction</span>:column;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.middle</span>&#123;<span class="attribute">flex</span>:<span class="number">1</span>;<span class="attribute">display</span>:flex;&#125;</span><br><span class="line">        <span class="selector-class">.right</span>&#123;<span class="attribute">flex</span>:<span class="number">1</span>;<span class="attribute">overflow</span>:auto;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">IE9</span>及以下浏览器不兼容</span><br></pre></td></tr></table></figure>

]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;p&gt;整理了一些布局的实现方案，算是笔记，发到博客上也希望能帮助到一些有需要的人。&lt;br&gt;&lt;br&gt;注：文中列出的只是核心代码，在实际应用中可能还需加入”width”/“height”/“bancground-color”等css样式。&lt;br&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;&lt;h1 id=&quot;居中布局&quot;&gt;&lt;a href=&quot;#居中布局&quot; class=&quot;headerlink&quot; title=&quot;居中布局 &quot;&gt;&lt;/a&gt;居中布局 &lt;br&gt;&lt;/h1&gt;&lt;p&gt;之后的布局讲解将以下面的这段代码为模板&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;“parent”&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;“child”&lt;/span&gt;&amp;gt;&lt;/span&gt;DEMO&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Dream is Possible</title>
    <link href="http://yoursite.com/2016/08/26/8.Dream%20is%20Possible/"/>
    <id>http://yoursite.com/2016/08/26/8.Dream is Possible/</id>
    <published>2016-08-25T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p></p><p>辭職了。我要追夢。<a id="more"></a><br><br><br>Date:2016-08-22<br><br><br><a id="more"></a></p><p></p>
<center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=38592976&auto=1&height=66"></iframe></center>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;p&gt;辭職了。我要追夢。
    
    </summary>
    
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
  </entry>
  
  <entry>
    <title>大魚海棠</title>
    <link href="http://yoursite.com/2016/08/10/7.%E5%A4%A7%E9%AD%9A%E6%B5%B7%E6%A3%A0/"/>
    <id>http://yoursite.com/2016/08/10/7.大魚海棠/</id>
    <published>2016-08-09T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<center><img src="https://cloud.githubusercontent.com/assets/17524418/16709379/0a955360-4642-11e6-92fc-d105e79c6af6.jpeg" style="border:0px;"></center><br>　　前天去看了期待了挺久的《大魚海棠》。<br><br>　　定檔發佈會後一直期待着《大魚海棠》上映，可真正看完了，又有點失落，感覺心裏少了點什麼東西，大概這下真的沒什麼電影可以期待了。至少暫時是這樣。到現在爲止，只有兩部電影有讓我想去電影院看的衝動。一部是《哆啦A夢：伴我同行》，另一部就是《大魚海棠》了。現在，心願都了了。<br><br><a id="more"></a><br><a id="more"></a>　　大魚一出來，罵聲一片。豆瓣，知乎幾乎一致差評。這也是大魚團隊自找的。給自己扣的帽子太高，就註定要被刮倒。“十二年磨一劍”，“國產動漫的希望”，明明應該是觀衆授予的稱號，電影還沒上映，倒是先往自己頭上扣了一大堆帽子，讓人對這部動畫寄予很高的期望。影片一上映，一旦影片中有點硬傷，就會被人抓着不放並無限放大，誰讓你當初說得那麼好聽？<br><br>　　今天刷微博的時候還刷到了官方已經開始出周邊了，價格更是感人，一下子對這個團隊好感度降爲了零。其實之前開定檔發佈會和主題曲發佈會我就有點反感，一部電影至於定個檔，發個主題曲都要開發佈會麼？而且直播看着也挺尷尬的，我對梁旋的第一印象並不是很好，感覺不像是個好人，雖然他想出了這麼美的點子，張春倒是看着挺和藹。主題曲發佈會上，說起了靈婆門外的對聯，好像是張春回答的吧，表達的意思就是他看到看到這副對聯的時候覺得很有意境，所以把它拿來用到裏面去了。看到這裏的時候內心挺無語的，不知道他有沒有去查過這副對聯表達的意思，但從現場的他的描述中看來，我沒有理解到他是瞭解過對聯後再用到電影裏的意思。給我很隨便的感覺，但現在官方又出了微博說電影中的每副對聯都對應着人物的不同性格，但我感覺有點牽強。主題曲發佈會上，還有問到Eason對這部電影世界觀的看法，但他支支吾吾了很久說不出話，最後還是把話題岔開了，是不是Eason也不是很認同這個劇情呢？我不知道，這只是我的猜想。<br><br>　　但如果拋開這個團隊，單單從電影的角度來考慮的話，這部電影還是值得一看的。相比現在的中國動漫電影，除了大聖創下的九億多的票房，第二的就是熊出沒三億多的票房。大聖是部好片，相對於當前的國產動漫電影來說，但是真的有點被捧過頭了，一開始也被噴得挺慘，而且這部片子裏還有濃濃的孫悟空情懷在裏面，能創下票房記錄，孫悟空這塊金字招牌也是離不開的。大魚雖然劇情有硬傷，但是畫面和音樂已經把國產動漫電影遠遠拋在後面了。畫面和音樂方面，我覺得已經超越近期所有的國產動漫電影，早期稱神的《大鬧天宮》之類的純中國電影就不用比較了。<br><br>　　抄襲問題，怎麼说呢，我只覺得椿很像《千與千尋》中的白龍，還有《哈爾的移動城堡》中的哈爾，其實哈爾和白龍不過換了個髮型，這是我的第一感受，因爲剛知道大魚的時候我剛看完這兩部電影不久，其他的我倒也沒覺得有什麼抄襲的地方。<br><br>　　我對這部電影劇情的感受，三不三角戀我不清楚，湫對椿是真正的愛，但是椿和鯤之間是種什麼樣的感情我看完實在無法理解，一開始肯定是對鯤的愧疚，爲了報恩，但後來呢？給我的感覺就像是你想樣寵物，但家人都是極力反對家裏養寵物的，但是你還是偷偷在養，後來被發現了，家里人想殺了這只寵物，哪怕放生都不行，但是你還是頂着全家人的壓力想保護它，最後把它放生了。這樣其實也可以理解，畢竟椿還是個小女孩，這個年紀的孩子有自己的堅持也是很正常的，因爲這個年紀的孩子也有他們的擔當。但是最後椿和鯤到了人間赤裸相待，椿沒有失去記憶。這樣的結局我無法理解，我是一直覺得他們兩個之間的感情不是愛情。<br><br>　　最後的彩蛋，湫和靈婆做了交易，靈婆把椿救活，他則將代替靈婆成爲新的靈婆。看了彩蛋我也想通了爲什麼湫一定要把椿送到人間，並且肯定的說他們一定會再見面，其實那時候湫和靈婆已經完成了交易，湫已經註定是下一個靈婆，而椿去了人間，死後她的靈魂又會化成小魚回到湫身邊，所以那時候靈婆在湫耳邊說的讓湫一臉震驚的話大概就是交換的條件吧。電影還有很多坑沒填上，比如湫是不是天神，爲什麼擺渡人接湫的時候要向湫行禮，湫爬到它頭上一副和它很熟的樣子。鼠婆去了人間後來怎樣了？靈婆解脫後又去了哪裏？這些坑官方都沒填上，不知道會出第二部還是出番外，或者官方給個解釋填坑，當然我還是希望有第二部。<br><br>　　看完電影后，我又去回顧2004年的flash版的大魚海棠，那時候還沒有湫和鯤，只有一個大魚化成的男孩 ，人身魚尾。我把他理解爲湫和鯤的結合體。那時候他和椿之間的感情還很單純，沒有這麼複雜，那時候的畫面也沒有現在這麼精美，很簡陋，但我看着卻能感受到短片給我帶來的溫暖與震撼。<br><br>　　看着12年前的《大魚海棠》，再看看現在的《大魚海棠》，這條大魚是否還是當初的那條大魚？<br><br><br>　　Date:2016-07-10<br><br><br><center><img src="https://cloud.githubusercontent.com/assets/17524418/16709361/46fe8728-4641-11e6-9194-0efebc78df05.png" style="border:0px;"></center><br><center><img src="https://cloud.githubusercontent.com/assets/17524418/16709373/af3b1ff4-4641-11e6-821c-c178d8296705.png" style="border:0px;"></center><br><center><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=25909149&auto=1&height=66"></iframe></center>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17524418/16709379/0a955360-4642-11e6-92fc-d105e79c6af6.jpeg&quot; style=&quot;border:0px;&quot;&gt;&lt;/center&gt;&lt;br&gt;　　前天去看了期待了挺久的《大魚海棠》。&lt;br&gt;&lt;br&gt;　　定檔發佈會後一直期待着《大魚海棠》上映，可真正看完了，又有點失落，感覺心裏少了點什麼東西，大概這下真的沒什麼電影可以期待了。至少暫時是這樣。到現在爲止，只有兩部電影有讓我想去電影院看的衝動。一部是《哆啦A夢：伴我同行》，另一部就是《大魚海棠》了。現在，心願都了了。&lt;br&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
  </entry>
  
  <entry>
    <title>喝完這瓶酒 下城再無三撈</title>
    <link href="http://yoursite.com/2016/06/15/6.%E5%96%9D%E5%AE%8C%E9%80%99%E7%93%B6%E9%85%92%20%E4%B8%8B%E5%9F%8E%E5%86%8D%E7%84%A1%E4%B8%89%E6%92%88/"/>
    <id>http://yoursite.com/2016/06/15/6.喝完這瓶酒 下城再無三撈/</id>
    <published>2016-06-14T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　這是我一個大學同學的一條朋友圈，稱作K（king of face）好了<br><br><br>　　今天他回去了。<br></p>
<center><br><img src="https://cloud.githubusercontent.com/assets/17524418/16083728/b13ef5d4-3348-11e6-8642-542f148d26d6.jpg" alt="图片已丢失"><br></center><br><a id="more"></a><br>　　一年前的這個時候，我們還在爲實習單位發愁，之後爲租房子發愁。大學時K是504寢室，我是506寢室，我們兩個寢室因爲LOL一直保持著聯係，當然其中也有另一位室友J的功勞。找實習單位那會兒，他和我的一個室友F成爲了同事，他們因爲同是臺州人而被錄取。之後K和F就開始一起找房子合租，一起生活。雙撈就在那時候形成了。<br><br><br>第三撈的形成也算個巧合，我實習后不久504的另一位成員G也來杭州了。本以爲失業的他突然收到了很多人夢寐以求的公司的電話，不久后就來杭州找我，那時候我已經在蕭山開始實習有一陣子，房子也找好了。他在我這裏呆了有三四天（可能有一兩天誤差），來的時候他基本已經被錄取了，然後他去找了房子，找房子的時候順便去看公司位置，結果一下車就看到了K和F的公司，而且G的公司就在他們公司對面。下城三撈就這麽誕生了。<br><br><br>實習的一年就這麽過去了，一年前的場景我還能清晰地記起，一年后已物是人非，我那批實習生祗剩下了我，公司的主任也換了，如今三撈不再有，心裏總覺得有點失落。但這是遲早的，就像當初我們對學校有多麽不捨，除了校門，不還是照樣生活麽。<br><br><br>這一年裏，我去下城不知道有沒有10次，應該差不多，一般去那都是裝系統去的。剛開始實習的時候，K和F被輪流派去了工地先是F，天天在工地放綫，K那時候一個人，經常跑去女同學租的地方進行交流，也挺快活。之後去了工地，爲了和我們開黑經常是走好久的路去網吧。后來，工地的活做完了，K也正式回來了，<br>K和F終于過上了正常的生活，一起上班，一起下班，一起吃飯，互相BB，一起被我們BB，當然對於F來説這當然不是正常的，畢竟有女朋友的人。G那時候也經常往他們那邊跑，一起吹吹牛，互相傷害。<br><br><br>　　後來F女朋友和F一起合租，K搬去了隔壁的房間一個人住。那時候G早就搬了房子，不過衹是小區里換了幢樓而已。<br><br>之前我們在K創建的討論組里成天BB，你黑我，我黑你，一天記錄能有幾十頁，後來我建了一個群，轉移了陣地，但熱鬧依舊。K和F整天在群裏開著群嘲，結果往往是被集火。哪怕現在也是。<br><br><br>　　再後來，我們要畢業了。<br><br><br>　　我看了一下QQ群，這貨已經在家裏了，又開始嘲諷，這東西就是欠打。<br><br><br><center><br><img src="https://cloud.githubusercontent.com/assets/17524418/16083111/6af3357e-3346-11e6-865a-e8d6ba353ced.jpg" alt="图片已丢失"><br></center><br><br>　　他回去還能開心地和我們裝逼就好，那證明他還是那個他。<br><br><br>　　6月23號，好像是給我們下的最後的通牒。<br><br><br>　　之後，各奔天涯。<br><br><br><br><br><br><br><br><br><br>　　其實我還是很在意他沒請我吃到飯。<br><br><br><center><br><img src="https://cloud.githubusercontent.com/assets/17524418/16083953/7b734404-3349-11e6-9df3-f172bbd7f1aa.jpg" alt="图片已丢失"><br></center><br><center><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=5330992&auto=1&height=66"></iframe><br></center>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　這是我一個大學同學的一條朋友圈，稱作K（king of face）好了&lt;/br&gt;&lt;/br&gt;&lt;br&gt;　　今天他回去了。&lt;/br&gt;&lt;/p&gt;
&lt;center&gt;&lt;br&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17524418/16083728/b13ef5d4-3348-11e6-8642-542f148d26d6.jpg&quot; alt=&quot;图片已丢失&quot;&gt;&lt;br&gt;&lt;/center&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
  </entry>
  
  <entry>
    <title>謝謝你們的陪伴</title>
    <link href="http://yoursite.com/2016/04/06/5.%E8%AC%9D%E8%AC%9D%E4%BD%A0%E5%80%91%E7%9A%84%E9%99%AA%E4%BC%B4/"/>
    <id>http://yoursite.com/2016/04/06/5.謝謝你們的陪伴/</id>
    <published>2016-04-05T16:00:00.000Z</published>
    <updated>2017-01-14T09:14:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　今天在網上刷刷刷的時候,突然看到和田光司去世的消息，一查才知道原來四月三號就去世了。<br><a id="more"></a><br>　　對和田光司這個人並不是很熟悉，但是他的歌對我這個年齡段的人來說肯定是再熟悉不過了。《Butter-Fly》，每次聽到總是會讓我振奮，在bilibili看有關這首歌視頻（包括以這首歌作為背景音樂的視頻）的時候，唱到高潮部分，總是滿屏的大無限，雖然我不是很懂，我也沒特地去查過這種現象，但是每次看到滿屏的大無限我總是會覺得震撼，起一身的雞皮疙瘩。《數碼寶貝》小時候看的並不多，熟悉的也就兩首歌，一首是《Butter-Fly》，另一首是數碼寶貝進化時的BGM，宮崎步的《brave heart》。《數碼寶貝》在我童年中占的比例非常小，小時候家裡沒條件，電視頻道是用天線搜的，遇到惡劣天氣信號還會特別的差，經常還要人工去調整天線的方向，所以那時候我對動畫片基本上也沒什麼挑剔，有的看就看，但現在想想《數碼寶貝》的劇情真的沒記住多少，電視畫面印象中也沒多少，其他動畫倒是有挺深的印象。但很慶幸童年時的動畫片是那麼豐富，《哆啦A夢》，《四驅兄弟》，《魔動王》，《高智能方程式》，《阿拉蕾》，《七龍珠》，《聰明的一休》，《灌籃高手》，就算國產的當時好的動畫也有一堆，《藍貓淘氣三千問》，《馬丁的造成》，《鴨子偵探》，《哪吒傳奇》，《小虎還鄉》，還有《快樂星球》，《家有兒女》這樣的電視劇，簡直太多了，還有太多我看過記不起名字的。而現在呢，《喜羊羊與灰太狼》這個相對現在來說已經算是老動畫了吧，05年出的，我初中的時候火得一塌糊塗，智障的浙江衛視在暑假的時候天天播，播完一輪又一輪。清明回家，外甥女嚷嚷著要看動畫片，我打開電視一看，熱門的都是……抱歉我好想就記得一個《超級飛俠》(熊出沒，喜洋洋，小魔仙之類我自然認識），一看造型，怎麼這麼像鐵膽火車俠的造型，其他還有一堆動畫，看過忘了，當然我現在對這個已經不上心，記不住也很正常，但這些動畫基本都是3D製作的，國產3D動畫就算備受好評的《秦時明月》我看著動作也很難受，更不用說這些他們想著給小孩子看的動畫了。當然國漫現在也在發展，今年也有不少不錯的國漫要出來，但是這些精品國漫基本上都不是幼兒園小學那個年齡段看的，而且這些動漫也基本只會在網絡上播，一般的小孩根本接觸不到，有了電腦肯定也是以遊戲為主。我十分不想我外甥女，還有我未來的小孩在這樣的環境下長大，但是你就算推薦自認為好看的動畫給現在的小孩看，他們根本融不進小夥伴的圈子。是在是無奈。</p>
<p>　　最后，致那些在我們童年給我們鼓勵，帶給我們難忘回憶的動畫。</p>
<p><center><img src="https://cloud.githubusercontent.com/assets/17524418/14389734/93c3175c-fde6-11e5-89c5-18edb09f7d77.jpg" alt="Alt text"></center></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=4940920&auto=1&height=66"></iframe>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　今天在網上刷刷刷的時候,突然看到和田光司去世的消息，一查才知道原來四月三號就去世了。&lt;br&gt;
    
    </summary>
    
    
      <category term="隨筆" scheme="http://yoursite.com/tags/%E9%9A%A8%E7%AD%86/"/>
    
  </entry>
  
  <entry>
    <title>到家了</title>
    <link href="http://yoursite.com/2016/04/03/4.%E5%88%B0%E5%AE%B6%E4%BA%86/"/>
    <id>http://yoursite.com/2016/04/03/4.到家了/</id>
    <published>2016-04-02T16:00:00.000Z</published>
    <updated>2017-02-20T13:10:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><center><img src="https://cloud.githubusercontent.com/assets/17524418/13880800/ffa68cfe-ed58-11e5-89e0-566c31df5690.jpg" alt="enter image description here"></center><br>　　经过三小时的“漫长”旅途终于回到家中，没有回家真好的感觉，只是感觉很亲切，能选择我宁愿独自在外。但，家总还是得回。<br><a id="more"></a><br>　　年后15号正式上班，到今天也有一个多月，其实说久也不算久，刚开始实习那会儿七八月份都没回家，不知道九月回没回。那段时间基本上我妈每星期固定一天会给我打来电话问我最近状况。每次通话内容都差不多，基本上都是我妈问，我就回答那麽几个字。时不时就会陷入沉默。我偶尔说起一个话题，她总是能说上半天。她开心就好。<br><br>　　这方面我的确听差劲，不怎麽会关心家里，只顾着自己在外轻鬆。如果不是我妈经常打电话给我，半个月都不会往家里打电话。一是时间真的久了我会心生愧疚，二是白天想到打电话，到了晚上就忘记了，所以我现在一想到要干什麽就会在日曆上新建事件。<br><br>　　今天到车站的时候已经将近八点，来接我的朋友又有些事耽搁了二十来分钟。接着去买了个榴莲，这是他跟他女朋友在我这敲的竹槓，我妈也喜欢吃榴莲，就顺道带了几块回来。榴莲真贵啊。给自己买了个菠萝，酸得要死。<br><br>　　到了家门口，由于没背书包，没有家门钥匙，在楼下打了好久电话，可惜没人接听。喊他们，狗叫声比我还大。我觉得他们是睡着了，于是把榴莲菠萝放围牆上，自己拉着旅行箱上街找夜宵吃去了。最后在全球连锁的沙县大饭店吃了份鸭腿饭，不得不说，还是建院的好吃。吃完吃完出门一抬头，鸡排店还没关门，心中一阵懊悔。再次回到家中，打了两个电话我爸终于接了，开了门一问，他们根本没睡，只是电视声音太响，而我爸手机刚好静音。<br><br>　　  夜深了，晚安。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;center&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/17524418/13880800/ffa68cfe-ed58-11e5-89e0-566c31df5690.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/center&gt;&lt;br&gt;　　经过三小时的“漫长”旅途终于回到家中，没有回家真好的感觉，只是感觉很亲切，能选择我宁愿独自在外。但，家总还是得回。&lt;/br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
